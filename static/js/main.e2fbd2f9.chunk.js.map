{"version":3,"sources":["../../src/index.js","components/Svg.js","components/demos/Steps.js","components/demos/dagSetup.js","components/demos/DagSinglePath.js","components/demos/DagTwoPaths.js","components/demos/DagNodes.js","App.js","index.js"],"names":["Path","relative","ex","px","d","key","Math","React","Component","Svg","children","width","height","xmlns","viewBox","Steps","x","y","data","useState","currentPath","setCurrentPath","pathArray","setPathArray","useEffect","path","moveTo","shiftRight","parseInt","length","radius","forEach","val","index","arr","prev","abs","right","a","m","toArray","newPath","timeout","curLength","tmp","slice","setTimeout","stroke","strokeWidth","shapeRendering","setupDag","g","dagre","graphlib","Graph","setGraph","rankdir","marginx","marginy","nodesep","ranksep","edgesep","setDefaultEdgeLabel","items","split","item","setNode","setEdge","layout","nodes","map","node","edges","edge","graph","dag","dagSetup","DagSinglePath","p","points","shift","M","point","L","down","left","up","toString","createPath","createConnectors","createNodes","Square","size","rest","close","toComponent","Circle","fill","style","DagNodes","squareNodes","circleNodes","cursor","onClick","alert","stepData","stepHeight","min","max","stepY","App","href","className","margin","rel","target","DagTwoPaths","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2fbd2f9.chunk.js","sourcesContent":["import React from 'react';\n\nclass Path extends React.Component {\n  constructor() {\n    super();\n    this.pathData = [];\n    this.attributes = {};\n\n    return this;\n  }\n\n  attr = (key, val) => {\n    this.attributes[key] = val;\n    return this;\n  };\n\n  fill = (val) => this.attr('fill', val);\n  stroke = (val) => this.attr('stroke', val);\n  strokeWidth = (val) => this.attr('strokeWidth', val);\n  style = (val) => this.attr('style', val);\n  /**\n   * Move svg cursor to x, y.\n   */\n  m = (x, y) => this.moveTo(x, y, true);\n  M = (x, y) => this.moveTo(x, y);\n  moveTo = (x, y, relative = false) => {\n    this.pathData.push(`${relative ? 'm' : 'M'}${x} ${y}`);\n    return this;\n  };\n\n  /**\n   * Draw straight line to x, y.\n   */\n  l = (x, y) => this.lineTo(x, y, true);\n  L = (x, y) => this.lineTo(x, y);\n  lineTo = (x, y, relative = false) => {\n    this.pathData.push(`${relative ? 'l' : 'L'}${x} ${y}`);\n    return this;\n  };\n\n  /**\n   * Draw a horizontal line to x.\n   */\n  H = (x) => this.horizontalTo(x);\n  h = (x) => this.horizontalTo(x, true);\n  horizontalTo = (x, relative = false) => {\n    this.pathData.push(`${relative ? 'h' : 'H'}${x}`);\n    return this;\n  };\n\n  /**\n   * Draw a vertical line to y.\n   */\n  V = (y) => this.verticalTo(y);\n  v = (y) => this.verticalTo(y, true);\n  verticalTo = (x, relative = false) => {\n    this.pathData.push(`${relative ? 'v' : 'V'}${x}`);\n    return this;\n  };\n\n  /**\n   * Draw quadratic curve to ex, ey using cx,cy as the control point.\n   */\n  Q = (cx, cy, ex, ey) => this.qCurveTo(cx, cy, ex, ey);\n  q = (cx, cy, ex, ey) => this.qCurveTo(cx, cy, ex, ey, true);\n  qCurveTo = (cx, cy, ex, ey, relative = false) => {\n    this.pathData.push(`${relative ? 'q' : 'Q'}${cx} ${cy}`);\n    this.pathData.push(`${ex} ${ey}`);\n    return this;\n  };\n\n  T = (ex, ey) => {\n    this.pathData.push(`T ${ex} ${ey}`);\n    return this;\n  };\n\n  t = (ex, ey) => {\n    this.pathData.push(`t ${ex} ${ey}`);\n    return this;\n  };\n\n  S = (cx, cy, ex, ey) => this.sCurveTo(cx, cy, ex, ey);\n  s = (cx, cy, ex, ey) => this.sCurveTo(cx, cy, ex, ey, true);\n  sCurveTo = (cx, cy, ex, ey, relative = false) => {\n    this.pathData.push(`${relative ? 's' : 'S'}${cx} ${cy}`);\n    this.pathData.push(`${ex} ${ey}`);\n    return this;\n  };\n\n  C = (cx1, cy1, cx2, cy2, ex, ey) => this.cCurveTo(cx1, cy1, cx2, cy2, ex, ey);\n  c = (cx1, cy1, cx2, cy2, ex, ey) =>\n    this.cCurveTo(cx1, cy1, cx2, cy2, ex, ey, true);\n\n  cCurveTo = (cx, cy, ex, ey, relative = false) => {\n    this.pathData.push(`${relative ? 's' : 'S'}${cx} ${cy}`);\n    this.pathData.push(`${ex} ${ey}`);\n    return this;\n  };\n\n  A = (rx, ry, rotation, arc, sweep, ex, ey) =>\n    this.arc(rx, ry, rotation, arc, sweep, ex, ey);\n\n  a = (rx, ry, rotation, arc, sweep, ex, ey) =>\n    this.arc(rx, ry, rotation, arc, sweep, ex, ey, true);\n\n  arc = (rx, ry, rotation, arc, sweep, ex, ey, relative = false) => {\n    this.pathData.push(\n      `${\n        relative ? 'a' : 'A'\n      }${rx} ${ry} ${rotation} ${arc} ${sweep} ${ex} ${ey}`\n    );\n    return this;\n  };\n\n  down = (px) => this.v(px);\n  up = (px) => this.v(px * -1);\n  right = (px) => this.h(px);\n  left = (px) => this.h(px * -1);\n\n  /**\n   * Close path.\n   */\n  close = () => {\n    this.pathData.push('z');\n    return this;\n  };\n\n  /**\n   * Return pathData array.\n   */\n  toArray = () => this.pathData;\n\n  /**\n   * Return joined pathData array.\n   */\n  toString = () => this.pathData.join(' ');\n\n  toComponent = (props) => (\n    <path d={this.toString()} {...this.attributes} {...props} />\n  );\n\n  toElement = (key = Math.random()) => (\n    <path key={key} d={this.toString()} {...this.attributes} />\n  );\n}\n\nexport default Path;\n","import React from 'react';\n\nconst Svg = ({ children, width, height }) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      {children}/\n    </svg>\n  );\n};\n\nexport default Svg;\n","import React, { useEffect, useState } from 'react';\nimport Path from 'react-svg-path';\nimport Svg from '../Svg';\n\nconst Steps = ({ width, height, x, y, data, ...rest }) => {\n  const [currentPath, setCurrentPath] = useState([]);\n  const [pathArray, setPathArray] = useState([]);\n\n  const steps = 10;\n  useEffect(() => {\n    const path = new Path().moveTo(x, y);\n    const radius = 5;\n\n    const pointDistance = parseInt(width / data.length) - radius * 2;\n    const shiftRight = pointDistance / 3;\n    data.forEach((val, index, arr) => {\n      const prev = index === 0 ? 0 : arr[index - 1];\n      for (let index = 0; index < steps; index++) {\n        path[prev > val ? 'down' : 'up'](Math.abs(prev - val) / steps);\n      }\n\n      for (let index = 0; index < steps; index++) {\n        path.right(shiftRight / steps);\n      }\n      path\n        .a(radius, radius, 0, 1, 0, radius * 2, 0)\n        .a(radius, radius, 0, 1, 0, -(radius * 2), 0)\n        .m(radius * 2, 0);\n\n      if (index !== arr.length - 1) {\n        for (let index = 0; index < steps; index++) {\n          path.right(shiftRight / steps);\n        }\n      }\n    });\n    setPathArray(path.toArray());\n  }, [data, width, x, y]);\n\n  useEffect(() => {\n    if (pathArray?.length) {\n      const curLength = currentPath.length;\n      const pathLength = pathArray.length;\n      let newPath;\n      let timeout;\n      if (curLength === pathLength) {\n        newPath = [pathArray[0]];\n        timeout = 1000;\n      } else {\n        const tmp = pathArray.slice(0, curLength + 1);\n        newPath = tmp;\n        timeout = 10;\n      }\n      setTimeout(() => setCurrentPath(newPath), timeout);\n    }\n  }, [currentPath, pathArray]);\n\n  return (\n    <Svg width={width} height={height}>\n      <path d={currentPath} stroke='#222' strokeWidth={0.5} shapeRendering=\"geometricPrecision\" />\n    </Svg>\n  );\n};\n\nexport default Steps;\n","import dagre from 'dagre';\n\nconst setupDag = () => {\n  var g = new dagre.graphlib.Graph();\n  g.setGraph({\n    rankdir: 'BT',\n    marginx: 15,\n    marginy: 50,\n    nodesep: 10,\n    ranksep: 50,\n    edgesep: 5\n  });\n\n  g.setDefaultEdgeLabel(function () {\n    return {};\n  });\n\n  const items = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  items.forEach((item) => g.setNode(item, { width: 25, height: 25 }));\n  items.forEach((item, index, arr) => {\n    if (index === 0) {\n      return;\n    }\n    if (index < 5) {\n      g.setEdge(item, 'a');\n    } else if (index < 9) {\n      g.setEdge(item, 'b');\n    } else if (index < 15) {\n      g.setEdge(item, 'c');\n    } else if (index < 19) {\n      g.setEdge(item, 'd');\n    } else {\n      g.setEdge(item, 'e');\n    }\n  });\n\n  dagre.layout(g);\n\n  return {\n    nodes: g.nodes().map((node) => g.node(node)),\n    edges: g.edges().map((edge) => g.edge(edge)),\n    graph: g.graph()\n  };\n};\n\nexport default setupDag;\n\n","import React from 'react';\nimport Path from 'react-svg-path';\nimport dagSetup from './dagSetup';\nimport Svg from '../Svg';\n\nconst dag = dagSetup();\n\nconst DagSinglePath = () => {\n  const createPath = () => {\n    const { edges, nodes } = dag;\n    const p = new Path();\n    edges.forEach(({ points, x, y }) => {\n      const m = points.shift();\n      p.M(m.x, m.y);\n      points.forEach((point) => p.L(point.x, point.y));\n    });\n    nodes.forEach(({ width, height, x, y }) => {\n      p.M(x - width / 2, y - height / 2)\n        .right(width)\n        .down(height)\n        .left(width)\n        .up(height);\n    });\n\n    return p.toString();\n  };\n\n  return (\n    <Svg width={dag.graph.width} height={dag.graph.height}>\n      <path stroke='#222' strokeWidth={0.5} d={createPath()} />\n    </Svg>\n  );\n};\n\nexport default DagSinglePath;\n","import React from 'react';\nimport Path from 'react-svg-path';\nimport dagSetup from './dagSetup';\nimport Svg from '../Svg';\n\nconst dag = dagSetup();\n\nconst DagSinglePath = () => {\n  const createNodes = () => {\n    const { nodes } = dag;\n    const p = new Path();\n    nodes.forEach(({ width, height, x, y }) => {\n      p.M(x - width / 2, y - height / 2)\n        .right(width)\n        .down(height)\n        .left(width)\n        .up(height);\n    });\n\n    return p.toString();\n  };\n\n  const createConnectors = () => {\n    const { edges } = dag;\n    const p = new Path();\n    edges.forEach(({ points, x, y }) => {\n      const m = points.shift();\n      p.M(m.x, m.y);\n      points.forEach((point) => p.L(point.x, point.y));\n    });\n\n    return p.toString();\n  };\n\n  return (\n    <Svg width={dag.graph.width} height={dag.graph.height}>\n      <path stroke='#222' strokeWidth={1} d={createConnectors()} />\n      <path stroke='red' strokeWidth={1} d={createNodes()} />\n    </Svg>\n  );\n};\n\nexport default DagSinglePath;\n","import React from 'react';\nimport Path from 'react-svg-path';\nimport dagSetup from './dagSetup';\nimport Svg from '../Svg';\n\nconst dag = dagSetup();\n\nconst Square = ({ x, y, size, ...rest }) => {\n  const path = new Path()\n    .moveTo(x, y)\n    .right(size)\n    .down(size)\n    .left(size)\n    .close()\n  return path.toComponent(rest);\n};\n\nconst Circle = ({ x, y, radius, fill, ...rest }) => {\n  const path = new Path()\n    .M(x, y)\n    .m(-radius, 0)\n    .a(radius, radius, 0, 1, 0, radius * 2, 0)\n    .a(radius, radius, 0, 1, 0, -(radius * 2), 0)\n    .style({ fill });\n  return path.toComponent(rest);\n};\n\nconst DagNodes = () => {\n  const createConnectors = () => {\n    const { edges } = dag;\n    const p = new Path();\n    edges.forEach(({ points, x, y }) => {\n      const m = points.shift();\n      p.M(m.x, m.y);\n      points.forEach((point) => p.L(point.x, point.y));\n    });\n\n    return p.toString();\n  };\n\n  const squareNodes = dag.nodes.slice(0, 5);\n  const circleNodes = dag.nodes.slice(5);\n\n  return (\n    <Svg width={dag.graph.width} height={dag.graph.height}>\n      <path stroke='#222' strokeWidth={1} d={createConnectors()} />\n      {squareNodes.map(({ x, y, width }, index) => {\n        return (\n          <Square\n            key={index}\n            x={x - width / 2}\n            y={y - width / 2}\n            size={width}\n            style={{ fill: 'rebeccapurple', cursor: 'pointer' }}\n            onClick={() => alert(`clicked node #${index}`)}\n          />\n        );\n      })}\n      {circleNodes.map(({ x, y, width }, index) => {\n        return (\n          <Circle\n            key={index}\n            x={x}\n            y={y}\n            radius={width / 2}\n            style={{ fill: 'purple', cursor: 'pointer' }}\n            onClick={() => alert(`clicked node #${index+5}`)}\n          />\n        );\n      })}\n    </Svg>\n  );\n};\n\nexport default DagNodes;\n","import React from 'react';\nimport Steps from './components/demos/Steps';\nimport DagSinglePath from './components/demos/DagSinglePath';\nimport DagTwoPaths from './components/demos/DagTwoPaths';\nimport DagNodes from './components/demos/DagNodes';\n\nimport './App.css';\n\nconst stepData = [\n  23,\n  -45,\n  100,\n  -100,\n  12,\n  -23,\n  34,\n  -45,\n  56,\n  -67,\n  78,\n  -89,\n  0,\n  0,\n  0,\n  0,\n  10,\n  40,\n  80,\n  120,\n  0\n];\n\nconst stepHeight = Math.abs(Math.min(...stepData) - Math.max(...stepData)) + 50;\nconst stepX = 15;\nconst stepY = stepHeight / 2;\n\nconst App = () => {\n  return (\n    <>\n      <h2>react-svg-path</h2>\n      <hr />\n      <a href='https://github.com/joemaddalone/react-svg-path'>\n        https://github.com/joemaddalone/react-svg-path\n      </a>\n\n      <h3 className='ui-header'>Demos</h3>\n      <p>\n        The svg element below contains only a single path. This may not be\n        ideal, depending on your needs, but it demonstrates the ability to\n        create complex shapes in a single path with react-svg-path\n      </p>\n      <div style={{ margin: 20 }}>\n        <DagSinglePath />\n        <a\n          href='https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/DagSinglePath.js'\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          source\n        </a>\n      </div>\n      <p>\n        We can easily convert this to two paths. One for the nodes and one for\n        the connecting lines.\n      </p>\n      <div style={{ margin: 20 }}>\n        <DagTwoPaths />\n        <a\n          href='https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/DagTwoPaths.js'\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          source\n        </a>\n      </div>\n      <p>\n        Likewise we can use .toComponent() to create reusable components for\n        each node. Each of these nodes is clickable.\n      </p>\n      <div style={{ margin: 20 }}>\n        <DagNodes />\n        <a\n          href='https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/DagNodes.js'\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          source\n        </a>\n      </div>\n      <p>\n        Since we're using React we can also create a simple \"drawing\" effect by\n        iterating over the array produced with .toArray().\n      </p>\n      <div style={{ margin: 20 }}>\n        <Steps\n          x={stepX}\n          y={stepY}\n          width={755}\n          height={stepHeight}\n          data={stepData}\n        />\n        <a\n          href='https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/Steps.js'\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          source\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
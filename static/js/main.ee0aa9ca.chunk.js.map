{"version":3,"sources":["../../src/index.js","components/demos/dagSetup.js","components/Svg.js","components/demos/DagSinglePath.js","components/demos/DagTwoPaths.js","components/demos/DagNodes.js","components/demos/Macros.js","App.js","index.js"],"names":["constructor","val","relative","x","y","cx","ex","rx","ry","rotation","arc","sweep","px","props","key","Math","React","Path","macro","setupDag","g","dagre","graphlib","Graph","setGraph","rankdir","marginx","marginy","nodesep","ranksep","edgesep","setDefaultEdgeLabel","items","split","forEach","item","setNode","width","height","index","arr","setEdge","layout","nodes","map","node","edges","edge","graph","Svg","children","xmlns","viewBox","dag","dagSetup","DagSinglePath","stroke","strokeWidth","d","p","points","m","shift","M","point","L","right","down","left","up","toString","createPath","createConnectors","createNodes","Square","size","rest","moveTo","close","toComponent","Circle","radius","fill","a","style","DagNodes","squareNodes","slice","circleNodes","cursor","onClick","alert","this","w","h","l","Macros","square","circle","triangle","macros","App","href","className","margin","rel","target","DagTwoPaths","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee0aa9ca.chunk.js","sourcesContent":["import React from 'react';\n\nclass Path extends React.Component {\n  constructor() {\n    super();\n    this.pathData = [];\n    this.attributes = {};\n\n    return this;\n  }\n\n  static macro = (name, fn) => {\n    this.prototype[name] = fn;\n  };\n\n  attr = (key, val) => {\n    this.attributes[key] = val;\n    return this;\n  };\n\n  fill = (val) => this.attr('fill', val);\n  stroke = (val) => this.attr('stroke', val);\n  strokeWidth = (val) => this.attr('strokeWidth', val);\n  style = (val) => this.attr('style', val);\n  /**\n   * Move svg cursor to x, y.\n   */\n  m = (x, y) => this.moveTo(x, y, true);\n  M = (x, y) => this.moveTo(x, y);\n  moveTo = (x, y, relative = false) => {\n    this.pathData.push(`${relative ? 'm' : 'M'}${x} ${y}`);\n    return this;\n  };\n\n  /**\n   * Draw straight line to x, y.\n   */\n  l = (x, y) => this.lineTo(x, y, true);\n  L = (x, y) => this.lineTo(x, y);\n  lineTo = (x, y, relative = false) => {\n    this.pathData.push(`${relative ? 'l' : 'L'}${x} ${y}`);\n    return this;\n  };\n\n  /**\n   * Draw a horizontal line to x.\n   */\n  H = (x) => this.horizontalTo(x);\n  h = (x) => this.horizontalTo(x, true);\n  horizontalTo = (x, relative = false) => {\n    this.pathData.push(`${relative ? 'h' : 'H'}${x}`);\n    return this;\n  };\n\n  /**\n   * Draw a vertical line to y.\n   */\n  V = (y) => this.verticalTo(y);\n  v = (y) => this.verticalTo(y, true);\n  verticalTo = (x, relative = false) => {\n    this.pathData.push(`${relative ? 'v' : 'V'}${x}`);\n    return this;\n  };\n\n  /**\n   * Draw quadratic curve to ex, ey using cx,cy as the control point.\n   */\n  Q = (cx, cy, ex, ey) => this.qCurveTo(cx, cy, ex, ey);\n  q = (cx, cy, ex, ey) => this.qCurveTo(cx, cy, ex, ey, true);\n  qCurveTo = (cx, cy, ex, ey, relative = false) => {\n    this.pathData.push(`${relative ? 'q' : 'Q'}${cx} ${cy}`);\n    this.pathData.push(`${ex} ${ey}`);\n    return this;\n  };\n\n  T = (ex, ey) => {\n    this.pathData.push(`T ${ex} ${ey}`);\n    return this;\n  };\n\n  t = (ex, ey) => {\n    this.pathData.push(`t ${ex} ${ey}`);\n    return this;\n  };\n\n  S = (cx, cy, ex, ey) => this.sCurveTo(cx, cy, ex, ey);\n  s = (cx, cy, ex, ey) => this.sCurveTo(cx, cy, ex, ey, true);\n  sCurveTo = (cx, cy, ex, ey, relative = false) => {\n    this.pathData.push(`${relative ? 's' : 'S'}${cx} ${cy}`);\n    this.pathData.push(`${ex} ${ey}`);\n    return this;\n  };\n\n  C = (cx1, cy1, cx2, cy2, ex, ey) => this.cCurveTo(cx1, cy1, cx2, cy2, ex, ey);\n  c = (cx1, cy1, cx2, cy2, ex, ey) =>\n    this.cCurveTo(cx1, cy1, cx2, cy2, ex, ey, true);\n\n  cCurveTo = (cx, cy, ex, ey, relative = false) => {\n    this.pathData.push(`${relative ? 's' : 'S'}${cx} ${cy}`);\n    this.pathData.push(`${ex} ${ey}`);\n    return this;\n  };\n\n  A = (rx, ry, rotation, arc, sweep, ex, ey) =>\n    this.arc(rx, ry, rotation, arc, sweep, ex, ey);\n\n  a = (rx, ry, rotation, arc, sweep, ex, ey) =>\n    this.arc(rx, ry, rotation, arc, sweep, ex, ey, true);\n\n  arc = (rx, ry, rotation, arc, sweep, ex, ey, relative = false) => {\n    this.pathData.push(\n      `${\n        relative ? 'a' : 'A'\n      }${rx} ${ry} ${rotation} ${arc} ${sweep} ${ex} ${ey}`\n    );\n    return this;\n  };\n\n  down = (px) => this.v(px);\n  up = (px) => this.v(px * -1);\n  right = (px) => this.h(px);\n  left = (px) => this.h(px * -1);\n\n  /**\n   * Close path.\n   */\n  close = () => {\n    this.pathData.push('z');\n    return this;\n  };\n\n  /**\n   * Return pathData array.\n   */\n  toArray = () => this.pathData;\n\n  /**\n   * Return joined pathData array.\n   */\n  toString = () => this.pathData.join(' ');\n\n  toComponent = (props) => (\n    <path d={this.toString()} {...this.attributes} {...props} />\n  );\n\n  toElement = (key = Math.random()) => (\n    <path key={key} d={this.toString()} {...this.attributes} />\n  );\n}\n\nexport default Path;\n","import dagre from 'dagre';\n\nconst setupDag = () => {\n  var g = new dagre.graphlib.Graph();\n  g.setGraph({\n    rankdir: 'BT',\n    marginx: 15,\n    marginy: 50,\n    nodesep: 10,\n    ranksep: 50,\n    edgesep: 5\n  });\n\n  g.setDefaultEdgeLabel(function () {\n    return {};\n  });\n\n  const items = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  items.forEach((item) => g.setNode(item, { width: 25, height: 25 }));\n  items.forEach((item, index, arr) => {\n    if (index === 0) {\n      return;\n    }\n    if (index < 5) {\n      g.setEdge(item, 'a');\n    } else if (index < 9) {\n      g.setEdge(item, 'b');\n    } else if (index < 15) {\n      g.setEdge(item, 'c');\n    } else if (index < 19) {\n      g.setEdge(item, 'd');\n    } else {\n      g.setEdge(item, 'e');\n    }\n  });\n\n  dagre.layout(g);\n\n  return {\n    nodes: g.nodes().map((node) => g.node(node)),\n    edges: g.edges().map((edge) => g.edge(edge)),\n    graph: g.graph()\n  };\n};\n\nexport default setupDag;\n\n","import React from 'react';\n\nconst Svg = ({ children, width, height }) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      {children}/\n    </svg>\n  );\n};\n\nexport default Svg;\n","import React from 'react';\nimport Path from 'react-svg-path';\nimport dagSetup from './dagSetup';\nimport Svg from '../Svg';\n\nconst dag = dagSetup();\n\nconst DagSinglePath = () => {\n  const createPath = () => {\n    const { edges, nodes } = dag;\n    const p = new Path();\n    edges.forEach(({ points, x, y }) => {\n      const m = points.shift();\n      p.M(m.x, m.y);\n      points.forEach((point) => p.L(point.x, point.y));\n    });\n    nodes.forEach(({ width, height, x, y }) => {\n      p.M(x - width / 2, y - height / 2)\n        .right(width)\n        .down(height)\n        .left(width)\n        .up(height);\n    });\n\n    return p.toString();\n  };\n\n  return (\n    <Svg width={dag.graph.width} height={dag.graph.height}>\n      <path stroke='#222' strokeWidth={0.5} d={createPath()} />\n    </Svg>\n  );\n};\n\nexport default DagSinglePath;\n","import React from 'react';\nimport Path from 'react-svg-path';\nimport dagSetup from './dagSetup';\nimport Svg from '../Svg';\n\nconst dag = dagSetup();\n\nconst DagSinglePath = () => {\n  const createNodes = () => {\n    const { nodes } = dag;\n    const p = new Path();\n    nodes.forEach(({ width, height, x, y }) => {\n      p.M(x - width / 2, y - height / 2)\n        .right(width)\n        .down(height)\n        .left(width)\n        .up(height);\n    });\n\n    return p.toString();\n  };\n\n  const createConnectors = () => {\n    const { edges } = dag;\n    const p = new Path();\n    edges.forEach(({ points, x, y }) => {\n      const m = points.shift();\n      p.M(m.x, m.y);\n      points.forEach((point) => p.L(point.x, point.y));\n    });\n\n    return p.toString();\n  };\n\n  return (\n    <Svg width={dag.graph.width} height={dag.graph.height}>\n      <path stroke='#222' strokeWidth={1} d={createConnectors()} />\n      <path stroke='red' strokeWidth={1} d={createNodes()} />\n    </Svg>\n  );\n};\n\nexport default DagSinglePath;\n","import React from 'react';\nimport Path from 'react-svg-path';\nimport dagSetup from './dagSetup';\nimport Svg from '../Svg';\n\nconst dag = dagSetup();\n\nconst Square = ({ x, y, size, ...rest }) => {\n  const path = new Path()\n    .moveTo(x, y)\n    .right(size)\n    .down(size)\n    .left(size)\n    .close();\n  return path.toComponent(rest);\n};\n\nconst Circle = ({ x, y, radius, fill, ...rest }) => {\n  const path = new Path()\n    .M(x, y)\n    .m(-radius, 0)\n    .a(radius, radius, 0, 1, 0, radius * 2, 0)\n    .a(radius, radius, 0, 1, 0, -(radius * 2), 0)\n    .style({ fill });\n  return path.toComponent(rest);\n};\n\nconst DagNodes = () => {\n  const createConnectors = () => {\n    const { edges } = dag;\n    const p = new Path();\n    edges.forEach(({ points, x, y }) => {\n      const m = points.shift();\n      p.M(m.x, m.y);\n      points.forEach((point) => p.L(point.x, point.y));\n    });\n\n    return p.toString();\n  };\n\n  const squareNodes = dag.nodes.slice(0, 5);\n  const circleNodes = dag.nodes.slice(5);\n\n  return (\n    <Svg width={dag.graph.width} height={dag.graph.height}>\n      <path stroke='#222' strokeWidth={1} d={createConnectors()} />\n      {squareNodes.map(({ x, y, width }, index) => {\n        return (\n          <Square\n            key={index}\n            x={x - width / 2}\n            y={y - width / 2}\n            size={width}\n            style={{ fill: 'rebeccapurple', cursor: 'pointer' }}\n            onClick={() => alert(`clicked node #${index}`)}\n          />\n        );\n      })}\n      {circleNodes.map(({ x, y, width }, index) => {\n        return (\n          <Circle\n            key={index}\n            x={x}\n            y={y}\n            radius={width / 2}\n            style={{ fill: 'purple', cursor: 'pointer' }}\n            onClick={() => alert(`clicked node #${index + 5}`)}\n          />\n        );\n      })}\n    </Svg>\n  );\n};\n\nexport default DagNodes;\n","import React from 'react';\nimport Path from 'react-svg-path';\nimport Svg from '../Svg';\n\nPath.macro('square', function (size, x, y) {\n  if (x && y) {\n    this.M(x, y); // only move if x & y are defined\n  }\n  this.right(size).down(size).left(size).up(size);\n  return this;\n});\n\nPath.macro('circle', function (radius, x, y) {\n  if (x && y) {\n    this.M(x, y); // only move if x & y are defined\n  }\n  this.m(-radius, 0)\n    .a(radius, radius, 0, 1, 0, -(radius * 2), 0)\n    .a(radius, radius, 0, 1, 0, radius * 2, 0);\n  return this;\n});\n\nPath.macro('triangle', function (w, h, x, y) {\n    this.M(x, y) // only move if x & y are defined\n    .l(-w / 2, h)\n    .right(w)\n    .L(x, y);\n  return this;\n});\n\nconst Macros = () => {\n  const macros = () => {\n    const p = new Path();\n    p.square(30, 25, 25)\n      .square(50, 60, 15)\n      .circle(15, 160, 40)\n      .circle(25, 225, 40)\n      .triangle(25, 25, 220, 30)\n      .triangle(65, 50, 265, 15)\n      .triangle(25, 25, 310, 30);\n    return p.toString();\n  };\n\n  return (\n    <Svg width={760} height={100}>\n      <path\n        d={macros()}\n        strokeWidth={1}\n        stroke='#222'\n      />\n    </Svg>\n  );\n};\n\nexport default Macros;\n","import React from 'react';\nimport DagSinglePath from './components/demos/DagSinglePath';\nimport DagTwoPaths from './components/demos/DagTwoPaths';\nimport DagNodes from './components/demos/DagNodes';\nimport Macros from './components/demos/Macros';\n\nimport './App.css';\nconst App = () => {\n  return (\n    <>\n      <h2>react-svg-path</h2>\n      <hr />\n      <a href='https://github.com/joemaddalone/react-svg-path'>\n        https://github.com/joemaddalone/react-svg-path\n      </a>\n\n      <h3 className='ui-header'>Demos</h3>\n      <p>\n        The svg element below contains only a single path. This may not be\n        ideal, depending on your needs, but it demonstrates the ability to\n        create complex shapes in a single path with react-svg-path\n      </p>\n      <div style={{ margin: 20 }}>\n        <DagSinglePath />\n        <a\n          href='https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/DagSinglePath.js'\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          source\n        </a>\n      </div>\n      <p>\n        We can easily convert this to two paths. One for the nodes and one for\n        the connecting lines.\n      </p>\n      <div style={{ margin: 20 }}>\n        <DagTwoPaths />\n        <a\n          href='https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/DagTwoPaths.js'\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          source\n        </a>\n      </div>\n      <p>\n        Likewise we can use .toComponent() to create reusable components for\n        each node. Each of these nodes is clickable.\n      </p>\n      <div style={{ margin: 20 }}>\n        <DagNodes />\n        <a\n          href='https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/DagNodes.js'\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          source\n        </a>\n      </div>\n      <p>Macros are a way to save a common set of path steps for reuse.</p>\n      <div style={{ margin: 20 }}>\n        <Macros />\n        <a\n          href='https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/Macros.js'\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          source\n        </a>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
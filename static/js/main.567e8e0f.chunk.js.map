{"version":3,"sources":["../../src/components/Path.js","../../src/utils/render.js","../../src/components/Circle.js","../../src/components/Ellipse.js","../../src/components/Square.js","../../src/components/Rect.js","../../src/components/Polygon.js","../../src/components/Polyline.js","../../src/components/RegPolygon.js","../../src/components/Sector.js","../../src/components/Segment.js","../../src/components/Triangle.js","../../src/components/Line.js","../../src/components/Cubic.js","../../src/components/Quad.js","../../src/components/Arc.js","../../src/components/Text.js","../../src/components/Svg.js","components/demos/dag/dagSetup.js","components/demos/dag/DagSinglePath.js","components/demos/dag/DagTwoPaths.js","components/demos/dag/DagNodes.js","components/demos/basic/Rect.js","components/demos/basic/Square.js","components/demos/basic/Triangle.js","components/demos/basic/Circle.js","components/demos/basic/Ellipse.js","components/demos/basic/Segment.js","components/demos/basic/Sector.js","components/demos/basic/Polygon.js","components/demos/basic/RegPolygon.js","components/demos/basic/Polyline.js","components/demos/basic/Cubic.js","components/demos/basic/Quad.js","components/demos/basic/Line.js","components/demos/basic/Arc.js","components/demos/complex/Pie.js","components/demos/complex/Donut.js","components/demos/complex/SparkLine.js","components/demos/nesting/NestingDemo1.js","components/demos/nesting/NestingDemo2.js","App.js","index.js"],"names":["Path","toComponent","props","d","this","toString","strokeWidth","attr","Original","render","pathMethod","componentProps","ex","ey","sx","sy","children","key","i","childProps","attach","restOfChildProps","cx","cy","determineAttachment","child","restOfComponentProps","Circle","size","rest","p","Ellipse","width","height","Square","Rect","Polygon","points","relative","Polyline","RegPolygon","sides","Sector","radius","startAngle","endAngle","Segment","Triangle","Line","Cubic","cx1","cy1","cx2","cy2","S","s","endX","endY","cmd","scmd","Quad","T","t","tcmd","Arc","rx","ry","rotation","arc","sweep","Text","x","y","Svg","xmlns","viewBox","setupDag","g","dagre","graphlib","Graph","setGraph","rankdir","marginx","marginy","nodesep","ranksep","edgesep","setDefaultEdgeLabel","items","split","forEach","item","setNode","index","arr","setEdge","layout","nodes","map","node","edges","edge","graph","dag","dagSetup","DagSinglePath","stroke","m","shift","M","point","L","right","down","left","up","createPath","createConnectors","createNodes","DagNodes","squareNodes","slice","circleNodes","style","fill","cursor","onClick","alert","RectDemo","trim","className","displayName","SquareDemo","TriangleDemo","CircleDemo","EllipseDemo","SegmentDemo","SectorDemo","PolygonDemo","RegPolygonDemo","pointsAbsolute","pointsRelative","PolylineDemo","marginBottom","CubicDemo","QuadDemo","LineDemo","ArcDemo","Pie","data","percentToDegree","sectors","total","percent","push","color","Donut","segments","Grid","cols","rows","close","lines","extra","colWidth","rowHeight","Array","from","length","_","SparkLine","sparkline","zero","pointDistance","parseInt","prev","unshift","reduce","a","b","polyline","rect","NestingDemo1","genPolylineZag","centerY","NestingDemo2","dx","dy","App","primitives","basicShapes","pieData","nested","href","margin","rel","target","DagTwoPaths","C","pd","flat","ReactDOM","document","getElementById"],"mappings":"+nBAGMA,c,4KACJC,wBACE,YADsB,IAAZC,MAAQ,IACX,4BAAMC,EAAGC,KAAKC,YAAgBD,KAA9B,WAAP,K,EAGFE,wBACE,OAAOF,KAAKG,KAAK,cAAjB,I,EANEP,C,OAAaQ,GCoBbC,EAAS,SAACC,EAAYC,EAAgBC,EAAIC,EAAIC,EAAIC,EAAIC,GAC1D,KAIE,MAAO,CACLN,IAAA,oBAA8CO,KAAM,KACpD,oBAA6B,qBAC3B,sBACEA,IAAKC,GA9Ba,SAACC,EAAYL,EAAIC,EAAIH,EAAIC,GAAO,MACVM,EADU,OAClDC,OADkD,cAC/BC,EAD+B,gBAE1D,OACE,EADF,UAAID,EACF,CACEN,GADF,EAEEC,GAFF,EAGEO,GAHF,EAIEC,GAAIR,GAIN,CACED,GADF,EAEEC,GAFF,EAGEO,GAHF,EAIEC,GAAIV,GAZN,GA4BSW,CAAoBC,EAAD,YAHG,SANlB,IACYC,EADZ,sBAEb,OAAOhB,gBAAP,ICvBSiB,EAAS,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMN,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,GAAIP,EAAwB,EAAxBA,SAAaa,EAAW,mCACvDC,EAAI,IAAV,EACMpB,EAAaoB,oBAAnB,GACA,OAAOrB,EAAOC,EAAYmB,EAAMP,EAAIC,EAAID,EAAIC,EAA5C,IAGFI,OAAc,YAAsB,IAAnBC,EAAmB,EAAnBA,KAAMN,EAAa,EAAbA,GAAIC,EAAS,EAATA,GACzB,OAAO,IAAI,GAAJ,WAAP,I,ICPWQ,EAAU,SAAC,GAAiD,IAA/CC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,OAAQX,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,GAAIP,EAAwB,EAAxBA,SAAaa,EAAW,6CACjEC,EAAI,IAAV,EACMpB,EAAaoB,uBAAnB,GACA,OAAOrB,EAAOC,EAAYmB,EAAMP,EAAIC,EAAID,EAAIC,EAA5C,IAGFQ,OAAe,gBAAGC,EAAH,QAAUC,EAAV,SAAkBX,EAAlB,KAAsBC,EAAtB,YACb,IAAI,GAAJ,cADa,I,ICNFW,EAAS,SAAC,GAAwC,IAAtCN,EAAsC,EAAtCA,KAAMN,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,GAAIP,EAAwB,EAAxBA,SAAaa,EAAW,mCACvDC,EAAI,IAAV,EACMpB,EAAaoB,oBAAnB,GACA,OAAOrB,EAAOC,EAAYmB,EAAMP,EAAIC,EAAID,EAAIC,EAA5C,IAGFW,OAAc,gBAAGN,EAAH,OAASN,EAAT,KAAaC,EAAb,YAAsB,IAAI,GAAJ,WAAtB,I,ICNDY,EAAO,SAAC,GAAiD,IAA/CH,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,OAAQX,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,GAAIP,EAAwB,EAAxBA,SAAaa,EAAW,6CAC9DC,EAAI,IAAV,EACMpB,EAAaoB,oBAAnB,GACA,OAAOrB,EAAOC,EAAYmB,EAAMP,EAAIC,EAAID,EAAIC,EAA5C,IAGFY,OAAY,gBAAGH,EAAH,QAAUC,EAAV,SAAkBX,EAAlB,KAAsBC,EAAtB,YACV,IAAI,GAAJ,WADU,I,ICNCa,EAAU,SAAC,GAA4C,IAA1CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,SAAUtB,EAAwB,EAAxBA,SAAaa,EAAW,sCAC5DC,EAAI,IAAV,EACMpB,EAAaoB,mBAAnB,GAFkE,EAGjDO,EAHiD,GAG3DvB,EAH2D,KAGvDC,EAHuD,OAIjDsB,EAAOA,SAJ0C,GAI3DzB,EAJ2D,KAIvDC,EAJuD,KAKlE,OAAOJ,EAAOC,EAAYmB,EAAMf,EAAIC,EAAIH,EAAIC,EAA5C,IAGFuB,OAAe,gBAAGC,EAAH,SAAWC,EAAX,kBAA0B,IAAI,GAAJ,UAA1B,I,ICRFC,EAAW,SAAC,GAA4C,IAA1CF,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,SAAUtB,EAAwB,EAAxBA,SAAaa,EAAW,sCAC7DC,EAAI,IAAV,EACMpB,EAAaoB,oBAAnB,GAFmE,EAGlDO,EAHkD,GAG5DvB,EAH4D,KAGxDC,EAHwD,OAIlDsB,EAAOA,SAJ2C,GAI5DzB,EAJ4D,KAIxDC,EAJwD,KAKnE,OAAOJ,EAAOC,EAAYmB,EAAMf,EAAIC,EAAIH,EAAIC,EAA5C,IAGF0B,OAAgB,gBAAGF,EAAH,SAAWC,EAAX,kBAA0B,IAAI,GAAJ,UAA1B,I,ICRHE,EAAa,SAAC,GAA+C,IAA7CZ,EAA6C,EAA7CA,KAAMa,EAAuC,EAAvCA,MAAOnB,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,GAAIP,EAAwB,EAAxBA,SAAaa,EAAW,2CAClEC,EAAI,IAAV,EACMpB,EAAaoB,0BAAnB,GACA,OAAOrB,EAAOC,EAAYmB,EAAMP,EAAIC,EAAID,EAAIC,EAA5C,IAGFiB,OAAkB,gBAAGZ,EAAH,OAASa,EAAT,QAAgBnB,EAAhB,KAAoBC,EAApB,YAChB,IAAI,GAAJ,iBADgB,I,ICNLmB,EAAS,SAAC,GAQjB,IAPJpB,EAOI,EAPJA,GACAC,EAMI,EANJA,GACAoB,EAKI,EALJA,OACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,SACA7B,EAEI,EAFJA,SACGa,EACC,6DACEC,EAAI,IAAV,EACMpB,EAAaoB,wBAAnB,GACA,OAAOrB,EAAOC,EAAYmB,EAAMP,EAAIC,EAAID,EAAIC,EAA5C,IAGFmB,OAAc,gBAAGpB,EAAH,KAAOC,EAAP,KAAWoB,EAAX,SAAmBC,EAAnB,aAA+BC,EAA/B,oEACZ,IAAI,GAAJ,eADY,I,ICdDC,EAAU,SAAC,GAQlB,IAPJxB,EAOI,EAPJA,GACAC,EAMI,EANJA,GACAoB,EAKI,EALJA,OACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,SACA7B,EAEI,EAFJA,SACGa,EACC,6DACEC,EAAI,IAAV,EACMpB,EAAaoB,yBAAnB,GACA,OAAOrB,EAAOC,EAAYmB,EAAMP,EAAIC,EAAID,EAAIC,EAA5C,IAGFuB,OAAe,gBAAGxB,EAAH,KAAOC,EAAP,KAAWoB,EAAX,SAAmBC,EAAnB,aAA+BC,EAA/B,oEACb,IAAI,GAAJ,gBADa,I,ICdFE,EAAW,SAAC,GAAwC,IAAtCnB,EAAsC,EAAtCA,KAAMN,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,GAAIP,EAAwB,EAAxBA,SAAaa,EAAW,mCACzDC,EAAI,IAAV,EACMpB,EAAaoB,sBAAnB,GACA,OAAOrB,EAAOC,EAAYmB,EAAMP,EAAIC,EAAID,EAAIC,EAA5C,IAGFwB,OAAgB,gBAAGnB,EAAH,OAASN,EAAT,KAAaC,EAAb,YAAsB,IAAI,GAAJ,aAAtB,I,ICNHyB,EAAO,SAAC,GAQf,IAPJlC,EAOI,EAPJA,GACAC,EAMI,EANJA,GACAH,EAKI,EALJA,GACAC,EAII,EAJJA,GAII,IAHJyB,gBAGI,SAFJtB,EAEI,EAFJA,SACGa,EACC,iDACEC,GAAI,IAAI,GAAJ,SAAV,GACMpB,EAAaoB,oBAAnB,GACA,OAAOrB,EAAOC,EAAYmB,EAAMf,EAAIC,EAAIH,EAAIC,EAA5C,IAGFmC,OAAY,gBAAGlC,EAAH,KAAOC,EAAP,KAAWH,EAAX,KAAeC,EAAf,kBAAmByB,OAAnB,gBACV,IAAI,GAAJ,uBADU,I,ICdCW,EAAQ,SAAC,GAchB,IAbJnC,EAaI,EAbJA,GACAC,EAYI,EAZJA,GACAmC,EAWI,EAXJA,IACAC,EAUI,EAVJA,IACAC,EASI,EATJA,IACAC,EAQI,EARJA,IACAzC,EAOI,EAPJA,GACAC,EAMI,EANJA,GAMI,IALJyC,SAKI,MALA,GAKA,MAJJC,SAII,MAJA,GAIA,EAHJvC,EAGI,EAHJA,SAGI,IAFJsB,gBAEI,SADDT,EACC,iFACA2B,EAAJ,EACIC,EAAJ,EACM3B,GAAI,IAAI,GAAJ,SAAV,GAgBA,OAJIwB,EAAJ,SACEE,EAAOF,EAAEA,SAAFA,GAAPE,GACAC,EAAOH,EAAEA,SAAFA,GAAPG,IAEKhD,GAfY,WAEjB,IAAMiD,EAAM5B,4BAAZ,GAOA,OANIwB,EAAJ,QACEA,WAAU,mBAAUI,YAAV,MAERH,EAAJ,QACEA,WAAU,mBAAUG,YAAV,MAEZ,IAMwB7B,EAAMf,EAAIC,EAAIyC,EAAMC,EAA9C,IAGFR,OAAa,YAYP,IAXJnC,EAWI,EAXJA,GACAC,EAUI,EAVJA,GACAmC,EASI,EATJA,IACAC,EAQI,EARJA,IACAC,EAOI,EAPJA,IACAC,EAMI,EANJA,IACAzC,EAKI,EALJA,GACAC,EAII,EAJJA,GAII,IAHJyC,SAGI,MAHA,GAGA,MAFJC,SAEI,MAFA,GAEA,MADJjB,gBACI,SACER,GAAI,IAAI,GAAJ,+BAAV,GASA,OANIwB,EAAJ,QACEA,WAAU,mBAAUxB,IAAI6B,EAAJ7B,GAAa6B,EAAvB,OAERJ,EAAJ,QACEA,WAAU,mBAAUzB,IAAI6B,EAAJ7B,GAAa6B,EAAvB,OAEZ,G,IC1DWC,EAAO,SAAC,GAYf,IAXJ9C,EAWI,EAXJA,GACAC,EAUI,EAVJA,GACAmC,EASI,EATJA,IACAC,EAQI,EARJA,IACAvC,EAOI,EAPJA,GACAC,EAMI,EANJA,GAMI,IALJgD,SAKI,MALA,GAKA,MAJJC,SAII,MAJA,GAIA,EAHJ9C,EAGI,EAHJA,SAGI,IAFJsB,gBAEI,SADDT,EACC,qEACA2B,EAAJ,EACIC,EAAJ,EACM3B,GAAI,IAAI,GAAJ,SAAV,GAgBA,OAJI+B,EAAJ,SACEL,EAAOK,EAAEA,SAAFA,GAAPL,GACAC,EAAOI,EAAEA,SAAFA,GAAPJ,IAEKhD,GAfY,WAEjB,IAAMiD,EAAM5B,wBAAZ,GAOA,OANI+B,EAAJ,QACEA,WAAU,mBAAUH,WAAcK,EAAdL,GAAuBK,EAAjC,OAERD,EAAJ,QACEA,WAAU,mBAAUJ,WAAcK,EAAdL,GAAuBK,EAAjC,OAEZ,IAMwBlC,EAAMf,EAAIC,EAAIyC,EAAMC,EAA9C,IAGFG,OAAY,YAUN,IATJ9C,EASI,EATJA,GACAC,EAQI,EARJA,GACAmC,EAOI,EAPJA,IACAC,EAMI,EANJA,IACAvC,EAKI,EALJA,GACAC,EAII,EAJJA,GAII,IAHJgD,SAGI,MAHA,GAGA,MAFJC,SAEI,MAFA,GAEA,MADJxB,gBACI,SACER,GAAI,IAAI,GAAJ,+BAAV,GASA,OANI+B,EAAJ,QACEA,WAAU,mBAAU/B,IAAIiC,EAAJjC,GAAaiC,EAAvB,OAERD,EAAJ,QACEA,WAAU,mBAAUhC,IAAIiC,EAAJjC,GAAaiC,EAAvB,OAEZ,G,ICtDWC,EAAM,SAAC,GAad,IAZJlD,EAYI,EAZJA,GACAC,EAWI,EAXJA,GACAkD,EAUI,EAVJA,GACAC,EASI,EATJA,GASI,IARJC,gBAQI,MARO,EAQP,MAPJC,WAOI,MAPE,EAOF,MANJC,aAMI,MANI,EAMJ,EALJzD,EAKI,EALJA,GACAC,EAII,EAJJA,GACAG,EAGI,EAHJA,SAGI,IAFJsB,gBAEI,SADDT,EACC,oFACEC,GAAI,IAAI,GAAJ,SAAV,GACMpB,EAAaoB,2BAAnB,GAWA,OAAOrB,EAAOC,EAAYmB,EAAMf,EAAIC,EAAIH,EAAIC,EAA5C,IAGFmD,OAAW,YAWL,IAVJlD,EAUI,EAVJA,GACAC,EASI,EATJA,GACAkD,EAQI,EARJA,GACAC,EAOI,EAPJA,GAOI,IANJC,gBAMI,MANO,EAMP,MALJC,WAKI,MALE,EAKF,MAJJC,aAII,MAJI,EAIJ,EAHJzD,EAGI,EAHJA,GACAC,EAEI,EAFJA,GAEI,IADJyB,gBACI,SACJ,OAAO,IAAI,GAAJ,8BAAP,I,IC1CWgC,EAAO,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,EAAGC,EAAmC,EAAnCA,EAAG1D,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,SAAaa,EAAW,oCAC3D,OACE,4BAAM0C,EAAGzD,GAAT,EAAkB0D,EAAGzD,GAAMyD,GAA3B,GADF,ICDWC,EAAM,SAAC,GAAyC,IAAvCzD,EAAuC,EAAvCA,SAAUgB,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,OAAWJ,EAAW,mCAC3D,OACE,2BACE6C,MADF,6BAEE1C,MAFF,EAGEC,OAHF,EAIE0C,QAAO,aAAkB1C,GAJ3B,GADF,I,qBC0Ca2C,EA3CE,KACf,IAAIC,EAAI,IAAIC,IAAMC,SAASC,MAC3BH,EAAEI,SAAS,CACTC,QAAS,KACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,QAAS,IAGXV,EAAEW,qBAAoB,WACpB,MAAO,MAGT,IAAMC,EAAQ,6BAA6BC,MAAM,IAqBjD,OApBAD,EAAME,QAASC,GAASf,EAAEgB,QAAQD,EAAM,CAAE5D,MAAO,GAAIC,OAAQ,MAC7DwD,EAAME,QAAQ,CAACC,EAAME,EAAOC,KACZ,IAAVD,IAGAA,EAAQ,EACVjB,EAAEmB,QAAQJ,EAAM,KACPE,EAAQ,EACjBjB,EAAEmB,QAAQJ,EAAM,KACPE,EAAQ,GACjBjB,EAAEmB,QAAQJ,EAAM,KACPE,EAAQ,GACjBjB,EAAEmB,QAAQJ,EAAM,KAEhBf,EAAEmB,QAAQJ,EAAM,QAIpBd,IAAMmB,OAAOpB,GAEN,CACLqB,MAAOrB,EAAEqB,QAAQC,IAAKC,GAASvB,EAAEuB,KAAKA,IACtCC,MAAOxB,EAAEwB,QAAQF,IAAKG,GAASzB,EAAEyB,KAAKA,IACtCC,MAAO1B,EAAE0B,UCrCPC,EAAMC,IA6BGC,EA3BO,IAqBlB,kBAAC,EAAD,CAAK1E,MAAOwE,EAAID,MAAMvE,MAAOC,OAAQuE,EAAID,MAAMtE,QAC7C,0BAAM0E,OAAO,OAAOrG,YAAa,GAAKH,EArBvB,MAAO,IAChBkG,EAAiBG,EAAjBH,MAAOH,EAAUM,EAAVN,MACTpE,EAAI,IAAI9B,EAcd,OAbAqG,EAAMV,QAAQ,EAAGtD,SAAQkC,IAAGC,QAC1B,IAAMoC,EAAIvE,EAAOwE,QACjB/E,EAAEgF,EAAEF,EAAErC,EAAGqC,EAAEpC,GACXnC,EAAOsD,QAASoB,GAAUjF,EAAEkF,EAAED,EAAMxC,EAAGwC,EAAMvC,MAE/C0B,EAAMP,QAAQ,EAAG3D,QAAOC,SAAQsC,IAAGC,QACjC1C,EAAEgF,EAAEvC,EAAIvC,EAAQ,EAAGwC,EAAIvC,EAAS,GAC7BgF,MAAMjF,GACNkF,KAAKjF,GACLkF,KAAKnF,GACLoF,GAAGnF,KAGDH,EAAEzB,YAKkCgH,MCxBzCb,EAAMC,IAqCGC,EAnCO,IA4BlB,kBAAC,EAAD,CAAK1E,MAAOwE,EAAID,MAAMvE,MAAOC,OAAQuE,EAAID,MAAMtE,QAC7C,0BAAM0E,OAAO,OAAOrG,YAAa,EAAGH,EAdf,MAAO,IACtBkG,EAAUG,EAAVH,MACFvE,EAAI,IAAI9B,EAOd,OANAqG,EAAMV,QAAQ,EAAGtD,SAAQkC,IAAGC,QAC1B,IAAMoC,EAAIvE,EAAOwE,QACjB/E,EAAEgF,EAAEF,EAAErC,EAAGqC,EAAEpC,GACXnC,EAAOsD,QAASoB,GAAUjF,EAAEkF,EAAED,EAAMxC,EAAGwC,EAAMvC,MAGxC1C,EAAEzB,YAKgCiH,KACvC,0BAAMX,OAAO,MAAMrG,YAAa,EAAGH,EA7BnB,MAAO,IACjB+F,EAAUM,EAAVN,MACFpE,EAAI,IAAI9B,EASd,OARAkG,EAAMP,QAAQ,EAAG3D,QAAOC,SAAQsC,IAAGC,QACjC1C,EAAEgF,EAAEvC,EAAIvC,EAAQ,EAAGwC,EAAIvC,EAAS,GAC7BgF,MAAMjF,GACNkF,KAAKjF,GACLkF,KAAKnF,GACLoF,GAAGnF,KAGDH,EAAEzB,YAkB+BkH,MChCtCf,EAAMC,IAiDGe,EA/CE,KACf,IAYMC,EAAcjB,EAAIN,MAAMwB,MAAM,EAAG,GACjCC,EAAcnB,EAAIN,MAAMwB,MAAM,GAEpC,OACE,kBAAC,EAAD,CAAK1F,MAAOwE,EAAID,MAAMvE,MAAOC,OAAQuE,EAAID,MAAMtE,QAC7C,0BAAM0E,OAAO,OAAOrG,YAAa,EAAGH,EAjBf,MAAO,IACtBkG,EAAUG,EAAVH,MACFvE,EAAI,IAAI9B,EAOd,OANAqG,EAAMV,QAAQ,EAAGtD,SAAQkC,IAAGC,QAC1B,IAAMoC,EAAIvE,EAAOwE,QACjB/E,EAAEgF,EAAEF,EAAErC,EAAGqC,EAAEpC,GACXnC,EAAOsD,QAASoB,GAAUjF,EAAEkF,EAAED,EAAMxC,EAAGwC,EAAMvC,MAGxC1C,EAAEzB,YAQgCiH,KACtCG,EAAYtB,IAAI,EAAG5B,IAAGC,IAAGxC,SAAS8D,IAE/B,kBAAC5D,EAAD,CACEjB,IAAK6E,EACLxE,GAAIiD,EACJhD,GAAIiD,EACJ5C,KAAMI,EACN4F,MAAO,CAAEC,KAAM,gBAAiBC,OAAQ,WACxCC,QAAS,IAAMC,MAAM,iBAAD,OAAkBlC,OAI3C6B,EAAYxB,IAAI,EAAG5B,IAAGC,IAAGxC,SAAS8D,IAE/B,kBAACnE,EAAD,CACEV,IAAK6E,EACLxE,GAAIiD,EACJhD,GAAIiD,EACJ5C,KAAMI,EACN4F,MAAO,CAAEC,KAAM,SAAUC,OAAQ,WACjCC,QAAS,IAAMC,MAAM,iBAAD,OAAkBlC,EAAQ,SC1C7CmC,EAAW,IACtB,oCACE,oCACA,8BACG,oFAECC,QAEJ,uHAIA,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,KACvB,kBAACE,EAAD,CAAMH,MAAO,IAAKC,OAAQ,GAAIX,GAAI,GAAIC,GAAI,KAC1C,kBAACY,EAAD,CAAMH,MAAO,GAAIC,OAAQ,EAAGX,GAAI,GAAIC,GAAI,GAAI4G,UAAU,aAK5DF,EAASG,YAAc,OCnBhB,IAAMC,EAAa,IACxB,oCACE,sCACA,8BACG,qEAECH,QAEJ,yHAIA,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,KACvB,kBAACC,EAAD,CAAQN,KAAM,IAAKN,GAAI,GAAIC,GAAI,KAC/B,kBAACW,EAAD,CAAQN,KAAM,GAAIN,GAAI,GAAIC,GAAI,GAAI4G,UAAU,aAKlDE,EAAWD,YAAc,SCnBlB,IAAME,EAAe,IAC1B,oCACE,wCACA,8BACG,uEAECJ,QAEJ,gJAIA,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,KACvB,kBAACc,EAAD,CAAUnB,KAAM,GAAIN,GAAI,GAAIC,GAAI,KAChC,kBAACwB,EAAD,CAAUnB,KAAM,GAAIN,GAAI,GAAIC,GAAI,GAAI4G,UAAU,aAKpDG,EAAaF,YAAc,WCnBpB,IAAMG,EAAa,IACxB,oCACE,wBAAIJ,UAAU,aAAd,UACA,8BACG,qEAECD,QAEJ,2HAIA,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,KACvB,kBAACN,EAAD,CAAQC,KAAM,GAAIN,GAAI,GAAIC,GAAI,KAC9B,kBAACI,EAAD,CAAQC,KAAM,GAAIN,GAAI,GAAIC,GAAI,GAAI4G,UAAU,aAKlDI,EAAWH,YAAc,aCnBlB,IAAMI,EAAc,IACzB,oCACE,uCACA,8BACG,uFAECN,QAEJ,0HAIA,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,KACvB,kBAACF,EAAD,CAASC,MAAO,IAAKC,OAAQ,GAAIX,GAAI,GAAIC,GAAI,KAC7C,kBAACQ,EAAD,CAASC,MAAO,GAAIC,OAAQ,IAAKX,GAAI,GAAIC,GAAI,GAAI4G,UAAU,aAMjEK,EAAYJ,YAAc,UCpBnB,IAAMK,EAAc,IACzB,oCACE,wBAAIN,UAAU,aAAd,WACA,8BACG,8GAECD,QAEJ,0HAKA,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,KACvB,kBAACa,EAAD,CAASxB,GAAI,GAAIC,GAAI,GAAIoB,OAAQ,GAAIC,WAAY,EAAGC,SAAU,MAC9D,kBAAClB,EAAD,CAAQC,KAAM,GAAIN,GAAI,GAAIC,GAAI,GAAI4G,UAAU,aAKlDM,EAAYL,YAAc,UCpBnB,IAAMM,EAAa,IACxB,oCACE,sCACA,8BACG,6GAECR,QAEJ,yHAIA,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,KACvB,kBAACS,EAAD,CAAQpB,GAAI,GAAIC,GAAI,GAAIoB,OAAQ,GAAIC,WAAY,EAAGC,SAAU,MAC7D,kBAAClB,EAAD,CAAQC,KAAM,GAAIN,GAAI,GAAIC,GAAI,GAAI4G,UAAU,aAKlDO,EAAWN,YAAc,SCnBzB,IAAM/F,EAAS,CACb,CAAC,GAAI,IACL,CAAC,GAAI,GACL,CAAC,GAAI,IACL,CAAC,GAAI,MAGMsG,EAAc,IACzB,oCACE,uCACA,8BACG,mHASCT,QAEJ,oNAKA,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,KACvB,kBAACG,EAAD,CAASC,OAAQA,MAKvBsG,EAAYP,YAAc,UCjCnB,IAAMQ,EAAiB,IAC5B,oCACE,0CACA,8BACG,wFAECV,QAEJ,6HAIA,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,KACvB,kBAACO,EAAD,CAAYZ,KAAM,IAAKa,MAAO,EAAGnB,GAAI,GAAIC,GAAI,KAC7C,kBAACiB,EAAD,CAAYZ,KAAM,GAAIa,MAAO,EAAGnB,GAAI,GAAIC,GAAI,GAAI4G,UAAU,aAKhES,EAAeR,YAAc,aCnB7B,IAAMS,EAAiB,CACrB,CAAC,GAAI,IACL,CAAC,GAAI,GACL,CAAC,GAAI,IACL,CAAC,GAAI,MAGDC,EAAiB,CACrB,CAAC,GAAI,IACL,CAAC,IAAK,IACN,CAAC,GAAI,IACL,EAAE,GAAI,KAEKC,EAAe,IAC1B,oCACE,wBAAIZ,UAAU,aAAd,yCACA,+NAKA,wBAAIA,UAAU,aAAd,YACA,yBAAKP,MAAO,CAAEoB,aAAc,KAC1B,8BACG,4HAQ6Bd,SAGlC,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,KACvB,kBAACM,EAAD,CAAUF,OAAQwG,KAEpB,wBAAIV,UAAU,aAAd,YACA,yBAAKP,MAAO,CAAEoB,aAAc,KAC1B,8BACG,uIAQsCd,SAG3C,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,KACvB,kBAACM,EAAD,CAAUF,OAAQyG,EAAgBxG,UAAQ,MAKhDyG,EAAaX,YAAc,WC1DpB,IAAMa,EAAY,IACvB,oCACE,+DACA,8BACG,mJAWCf,QAEJ,gDACA,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,KACvB,kBAACgB,EAAD,CACEnC,GAAI,GACJC,GAAI,GACJmC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLzC,GAAI,GACJC,GAAI,MAGR,gNAKA,kBAAC,EAAD,CAAKmB,MAAO,IAAKC,OAAQ,KACvB,kBAACgB,EAAD,CACEnC,GAAI,GACJC,GAAI,GACJmC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLzC,GAAI,GACJC,GAAI,GACJyC,EAAG,CAAC,CAAC,GAAI,GAAI,GAAI,QAGrB,8BACG,qDAEC4E,QAEJ,oIAGE,6BAHF,IAGS,gDAHT,MAQJe,EAAUb,YAAc,QC7DjB,IAAMc,EAAW,IACtB,oCACE,kEACA,8BACG,gHASChB,QAEJ,+CACA,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,KACvB,kBAAC2B,EAAD,CAAM9C,GAAI,GAAIC,GAAI,GAAImC,IAAK,GAAIC,IAAK,GAAIvC,GAAI,GAAIC,GAAI,MAEtD,oNAKA,kBAAC,EAAD,CAAKmB,MAAO,IAAKC,OAAQ,IACvB,kBAAC2B,EAAD,CACE9C,GAAI,GACJC,GAAI,GACJmC,IAAK,GACLC,IAAK,GACLvC,GAAI,GACJC,GAAI,GACJgD,EAAG,CACD,CAAC,GAAI,IACL,CAAC,IAAK,IACN,CAAC,IAAK,IACN,CAAC,IAAK,IACN,CAAC,IAAK,IACN,CAAC,IAAK,QAIZ,8BACG,oDAECqE,QAEJ,mIAGE,6BAHF,IAGS,gDAHT,MAQJgB,EAASd,YAAc,OCvDhB,IAAMe,EAAW,IACtB,oCACE,oCACA,8BACG,6EAECjB,QAEJ,uGAGA,kBAAC,EAAD,CAAKlG,MAAO,GAAIC,OAAQ,IACtB,kBAACe,EAAD,CAAMlC,GAAI,GAAIC,GAAI,GAAIH,GAAI,GAAIC,GAAI,OAKxCsI,EAASf,YAAc,OCjBhB,IAAMgB,GAAU,IACrB,oCACE,mCACA,8BACG,sKAYClB,QAEJ,8CAGA,kBAAC,EAAD,CAAKlG,MAAO,GAAIC,OAAQ,IACtB,kBAAC+B,EAAD,CAAKlD,GAAI,GAAIC,GAAI,GAAIkD,GAAI,GAAIC,GAAI,GAAIC,SAAU,EAAGC,IAAK,EAAGC,MAAO,EAAGzD,GAAI,GAAIC,GAAI,OAKtFuI,GAAQhB,YAAc,MC3BtB,IAyBeiB,GAzBH,EAAGzH,OAAMN,KAAIC,KAAI+H,WAC3B,IAAMC,EAAmBzH,GAAOA,EAAI,IAAO,IACrC0H,EAAU,GACZC,EAAQ,EAiBZ,OAhBAH,EAAK3D,QAAQ,CAACxF,EAAGe,KACf,IAAM0B,EAAa2G,EAAgBE,GAC7B5G,EAAW0G,EAAgBE,EAAQtJ,EAAEuJ,SAC3CF,EAAQG,KACN,kBAACjH,EAAD,CACEG,SAAUA,EACVD,WAAYA,EACZtB,GAAIA,EACJC,GAAIA,EACJoB,OAAQf,EAAM,EACdX,IAAKC,EACL2G,KAAM1H,EAAEyJ,SAEZH,GAAgBtJ,EAAEuJ,UAIhB,2BAAIF,I,UCKKK,GA1BA,IAA4C,IAA1CjI,EAAyC,EAAzCA,KAAMI,EAAmC,EAAnCA,MAAOV,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,GAAI+H,EAAoB,EAApBA,KAC9BC,GADkD,kDAC/BzH,GAAOA,EAAI,IAAO,KACrCgI,EAAW,GACbL,EAAQ,EAoBZ,OAnBAH,EAAK3D,QAAQ,CAACxF,EAAGe,KACf,IAAM0B,EAAa2G,EAAgBE,GAC7B5G,EAAW0G,EAAgBE,EAAQtJ,EAAEuJ,SAC3CI,EAASH,KACP,kBAAC7G,EAAD,CACExB,GAAIA,EACJC,GAAIA,EACJoB,QAASf,EAAOI,GAAS,EACzBY,WAAYA,EACZC,SAAUA,EACV5B,IAAKC,EACLZ,YAAa0B,EACb2E,OAAQxG,EAAEyJ,MACV/B,KAAK,UAGT4B,GAAgBtJ,EAAEuJ,UAGb,2BAAII,ICvBPC,GAAO,EAAGxF,IAAGC,IAAGxC,QAAOC,SAAQ+H,OAAMC,OAAMC,SAAQ,MACvD,IAAMC,GAAQ,IAAInK,GAAO8G,EAAEvC,EAAGC,GACxB4F,EAAQF,EAAQ,EAAI,EACpBG,EAAWrI,EAAQgI,EACnBM,EAAYrI,EAASgI,EAO3B,OANAM,MAAMC,KAAK,CAAEC,OAAQT,EAAOI,IAASjE,IAAI,CAACuE,EAAG5E,IAC3CqE,EAAMrD,EAAEvC,EAAIuB,EAAQuE,EAAU7F,GAAG0C,KAAKjF,IAExCsI,MAAMC,KAAK,CAAEC,OAAQR,EAAOG,IAASjE,IAAI,CAACuE,EAAG5E,IAC3CqE,EAAMrD,EAAEvC,EAAGC,EAAIsB,EAAQwE,EAAW9F,GAAGyC,MAAMjF,IAEtC,0BAAM7B,EAAGgK,EAAM9J,WAAYsG,OAAO,UA+B5BgE,GA5BG,EAAG3I,QAAOC,SAAQqH,WAClC,IAAMsB,EAAY,IAAI5K,EAChB6K,EAAO5I,EAAS,EAChB6I,EAAgBC,SAAS/I,EAAQsH,EAAKmB,QACtCpI,EAASiH,EAAKnD,IAAI,CAAChG,EAAG2F,KAC1B,GAAc,IAAVA,EAAa,CACf,IAAMkF,EAAO1B,EAAKxD,EAAQ,GAC1B,MAAO,CAACgF,EAAeE,EAAO7K,GAE9B,MAAO,CAAC2K,EAAe3K,KAM3B,OAHAkC,EAAO4I,QAAQ,CAAC,EAAGJ,EAAOvB,EAAK4B,OAAO,CAACC,EAAGC,IAAMD,EAAIC,GAAK,EAAI,KAC7DR,EAAUS,SAAShJ,GAAQ,GAGzB,kBAAC,EAAD,CAAKL,MAAOA,EAAQ,EAAGC,OAAQA,EAAS,GACtC,kBAAC8H,GAAD,CAAMxF,EAAG,EAAGC,EAAG,EAAGxC,MAAOA,EAAOC,OAAQA,EAAQgI,KAAM,GAAID,KAAM,KAChE,0BAAM7J,EAAGyK,EAAUvK,WAAYsG,OAAO,MAAMkB,KAAK,SACjD,0BACE1H,GAAG,IAAIH,GAAOsL,KAAKtJ,EAAOC,EAAQD,EAAQ,EAAGC,EAAS,GACtD4F,KAAK,OACLlB,OAAO,WCFA4E,I,OA5BM,IACnB,oCACE,kDACA,wKAIA,kBAAC,EAAD,CAAKvJ,MAAO,IAAKC,OAAQ,IAAKkG,UAAU,qBACtC,kBAAC3F,EAAD,CAAYZ,KAAM,IAAKa,MAAO,EAAGnB,GAAI,IAAKC,GAAI,KAC5C,kBAACI,EAAD,CAAQC,KAAM,KACd,kBAACM,EAAD,CAAQN,KAAM,KACd,kBAACD,EAAD,CAAQC,KAAM,GAAIL,GAAI,OAG1B,6BACE,8BACG,yOAMP2G,WCnBIsD,I,OAAkBC,IACtB,IAGMpJ,EAHUkI,MAAMC,KAAK,CAAEC,OAAQ,KAAMtE,IAAI,CAACrE,EAAGZ,IAC1CA,EAAI,IAAM,EAAIuK,EAAU,EAAIA,EAAU,GAExBtF,IAAI,CAAC3B,EAAGtD,IACtB,CAAC,GAAKA,EAAGsD,IAMlB,OAJAnC,EAAOwE,QACPxE,EAAOsH,KAAK,CAAC,IAAK8B,IAClBpJ,EAAOsH,KAAK,CAAC,IAAK8B,IAEXpJ,IA6GMqJ,GA1GM,IACnB,oCACE,kDACA,mIAIA,kBAAC,EAAD,CAAK1J,MAAO,IAAKC,OAAQ,IAAKkG,UAAU,qBACtC,kBAACnF,EAAD,CAAMlC,GAAI,GAAIC,GAAI,GAAIH,GAAI,IAAKC,GAAI,GAAI8F,OAAO,QAC5C,kBAAChF,EAAD,CAAQC,KAAM,GAAIiG,KAAK,UAEzB,kBAAC7E,EAAD,CAAMlC,GAAI,GAAIC,GAAI,GAAIH,GAAI,IAAKC,GAAI,GAAI8F,OAAO,OAC5C,kBAACzE,EAAD,CAAQN,KAAM,GAAIiG,KAAK,SAEzB,kBAAC7E,EAAD,CAAMlC,GAAI,GAAIC,GAAI,GAAIH,GAAI,IAAKC,GAAI,GAAI8F,OAAO,SAC5C,kBAAC3D,EAAD,CAAMpC,GAAI,IAAKC,GAAI,GAAI8F,OAAO,UAC9B,kBAAC3D,EAAD,CAAMpC,GAAI,IAAKC,GAAI,GAAI8F,OAAO,WAEhC,kBAACpE,EAAD,CAAUF,OAAQmJ,GAAe,KAAM7E,OAAO,MAAMkB,KAAK,QACvD,kBAAC,EAAD,CAAM8D,GAAI,EAAGC,GAAI,GAAjB,aAIF,kBAAC5I,EAAD,CAAMlC,GAAI,GAAIC,GAAI,IAAKH,GAAI,IAAKC,GAAI,IAAK8F,OAAO,OAC9C,kBAAC,EAAD,CAAMgF,GAAI,EAAGC,GAAI,GAAjB,SAKF,kBAAC5I,EAAD,CAAMlC,GAAI,GAAIC,GAAI,IAAKH,GAAI,IAAKC,GAAI,IAAK8F,OAAO,OAC9C,kBAAC3C,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAItD,GAAI,IAAKC,GAAI,IAAKgH,KAAK,OAAOlB,OAAO,OACxD,kBAAChF,EAAD,CAAQC,KAAM,GAAIiG,KAAK,WAI7B,6BACE,8BACG,owBAyBAK,SAGL,4FACiE,IAC/D,sCAFF,gFAKA,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,GAAIkG,UAAU,qBACrC,kBAACnF,EAAD,CAAMlC,GAAI,GAAIC,GAAI,GAAIH,GAAI,IAAKC,GAAI,GAAI8F,OAAO,QAC5C,kBAAChF,EAAD,CAAQC,KAAM,GAAIiG,KAAK,OAAOzG,OAAO,YAGzC,6BACE,8BACG,qHAGA8G,SAGL,uFACA,kBAAC,EAAD,CAAKlG,MAAO,IAAKC,OAAQ,GAAIkG,UAAU,qBACrC,kBAAC5F,EAAD,CAAUF,OAAQmJ,GAAe,IAAK7E,OAAO,MAAMkB,KAAK,QACtD,kBAAC,EAAD,CAAM8D,GAAI,EAAGC,GAAI,GAAjB,YAGA,kBAACjK,EAAD,CAAQC,KAAM,GAAIiG,KAAK,MAAMzG,OAAO,YAGxC,6BACE,8BACG,oLAMI8G,UC6GE2D,I,OA9MH,KACV,IAAMC,EAAa,CACjB7C,EACAC,EACAE,IAEI2C,EAAc,CAClB5C,EACAlB,EACAI,EACAC,EACAM,EACAJ,EACAD,EACAG,EACAD,EACAM,EACAJ,GAGIqD,EAAU,CACd,CACEpC,MAAO,UACPF,QAAS,GACTuC,OAAQ,CACN,CAAErC,MAAO,qBAAsBF,QAAS,IACxC,CAAEE,MAAO,qBAAsBF,QAAS,MAG5C,CACEE,MAAO,UACPF,QAAS,GACTuC,OAAQ,CACN,CAAErC,MAAO,qBAAsBF,QAAS,IACxC,CAAEE,MAAO,qBAAsBF,QAAS,IACxC,CAAEE,MAAO,qBAAsBF,QAAS,MAG5C,CACEE,MAAO,UACPF,QAAS,GACTuC,OAAQ,CACN,CAAErC,MAAO,qBAAsBF,QAAS,IACxC,CAAEE,MAAO,qBAAsBF,QAAS,OAI9C,OACE,oCACE,8CACA,6BACA,uBAAGwC,KAAK,kDAAR,kDAIA,wBAAI/D,UAAU,aAAd,SACA,+NAKA,yBAAKA,UAAU,OACb,yBAAKP,MAAO,CAAEuE,OAAQ,KACpB,kBAAC,EAAD,MACA,uBACED,KAAK,+GACLE,IAAI,sBACJC,OAAO,UAHT,WAQF,2HAIA,yBAAKzE,MAAO,CAAEuE,OAAQ,KACpB,kBAACG,EAAD,MACA,uBACEJ,KAAK,6GACLE,IAAI,sBACJC,OAAO,UAHT,WAQF,gJAIA,yBAAKzE,MAAO,CAAEuE,OAAQ,KACpB,kBAAC,EAAD,MACA,uBACED,KAAK,0GACLE,IAAI,sBACJC,OAAO,UAHT,YAUJ,yGAIA,8EACA,yBAAKlE,UAAU,gBACb,wBAAIA,UAAU,aAAd,gBACC4D,EAAY5F,IAAI,CAACoG,EAAGrL,IACnB,0BAAMD,IAAKC,GACT,kBAACqL,EAAD,MACA,uBACEL,KAAI,wGAAmGK,EAAEnE,YAArG,OACJgE,IAAI,sBACJC,OAAO,UAHT,aAWN,wBAAIlE,UAAU,aAAd,oBACA,yBAAKA,UAAU,WACb,wBAAIA,UAAU,aAAd,oBACA,kBAAC,EAAD,CAAKnG,MAAO,IAAKC,OAAQ,KACvB,kBAAC,GAAD,CAAKL,KAAM,IAAKN,GAAI,GAAIC,GAAI,GAAI+H,KAAM0C,KAExC,uBACEE,KAAI,yGACJE,IAAI,sBACJC,OAAO,UAHT,UAOA,wBAAIlE,UAAU,aAAd,qBACA,kBAAC,EAAD,CAAKnG,MAAO,IAAKC,OAAQ,KACvB,kBAAC,GAAD,CAAOD,MAAO,GAAIJ,KAAM,IAAKN,GAAI,GAAIC,GAAI,GAAI+H,KAAM0C,KAErD,uBACEE,KAAI,2GACJE,IAAI,sBACJC,OAAO,UAHT,UAOA,wBAAIlE,UAAU,aAAd,+BACA,kBAAC,EAAD,CAAKnG,MAAO,IAAKC,OAAQ,KACvB,kBAAC,GAAD,CAAKL,KAAM,IAAKN,GAAI,GAAIC,GAAI,GAAI+H,KAAM0C,IACtC,kBAAC,GAAD,CACEhK,MAAO,GACPJ,KAAM,IACNN,GAAI,GACJC,GAAI,GACJoF,OAAO,OACP2C,KAAM0C,EAAQ7F,IAAKqG,GAAOA,EAAGP,QAAQQ,UAGzC,wBAAItE,UAAU,aAAd,oBACA,kBAAC,GAAD,CACEnG,MAAO,IACPC,OAAQ,IACRqH,KAAM,EAAE,IAAK,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,GAAI,MAE9C,uBACE4C,KAAI,+GACJE,IAAI,sBACJC,OAAO,UAHT,WASF,wBAAIlE,UAAU,aAAd,sBACA,yBAAKA,UAAU,WACb,yUAOA,kBAAC,GAAD,MACA,kBAAC,GAAD,OAGF,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,aAAd,oBACC2D,EAAW3F,IAAI,CAACoG,EAAGrL,IAClB,0BAAMD,IAAKC,GACT,kBAACqL,EAAD,MACA,uBACEL,KAAI,wGAAmGK,EAAEnE,YAArG,OACJgE,IAAI,sBACJC,OAAO,UAHT,gBCxNZK,IAASjM,OAAO,kBAAC,GAAD,MAASkM,SAASC,eAAe,W","file":"static/js/main.567e8e0f.chunk.js","sourcesContent":["import React from 'react';\nimport Original from '@joemaddalone/path';\n\nclass Path extends Original {\n  toComponent(props = {}) {\n    return <path d={this.toString()} {...this.attributes} {...props} />;\n  }\n\n  strokeWidth(val) {\n    return this.attr('strokeWidth', val);\n  }\n}\n\nexport default Path;\n","import React from 'react';\n\nconst determineAttachment = (childProps, sx, sy, ex, ey) => {\n  const { attach = 'end', ...restOfChildProps } = childProps;\n  if (attach === 'start') {\n    return {\n      sx,\n      sy,\n      cx: sx,\n      cy: sy,\n      ...restOfChildProps\n    };\n  } else {\n    return {\n      sx: ex,\n      sy: ey,\n      cx: ex,\n      cy: ey,\n      ...restOfChildProps\n    };\n  }\n};\n\nconst render = (pathMethod, componentProps, ex, ey, sx, sy, children) => {\n  if (!children) {\n    const { inheritStart, ...restOfComponentProps } = componentProps;\n    return pathMethod().toComponent(restOfComponentProps);\n  } else {\n    return [\n      pathMethod().toComponent({ ...componentProps, key: -1 }),\n      React.Children.map(children, (child, i) =>\n        React.cloneElement(child, {\n          key: i,\n          ...determineAttachment(child.props, ex, ey, sx, sy)\n        })\n      )\n    ];\n  }\n};\n\nexport default render;\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const Circle = ({ size, cx, cy, children, ...rest }) => {\n  const p = new Path();\n  const pathMethod = p.circle.bind(p, size, cx, cy);\n  return render(pathMethod, rest, cx, cy, cx, cy, children);\n};\n\nCircle.path = ({ size, cx, cy }) => {\n  return new Path().circle(size, cx, cy);\n};\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const Ellipse = ({ width, height, cx, cy, children, ...rest }) => {\n  const p = new Path();\n  const pathMethod = p.ellipse.bind(p, width, height, cx, cy);\n  return render(pathMethod, rest, cx, cy, cx, cy, children);\n};\n\nEllipse.path = ({ width, height, cx, cy }) =>\n  new Path().ellipse(width, height, cx, cy);\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const Square = ({ size, cx, cy, children, ...rest }) => {\n  const p = new Path();\n  const pathMethod = p.square.bind(p, size, cx, cy);\n  return render(pathMethod, rest, cx, cy, cx, cy, children);\n};\n\nSquare.path = ({ size, cx, cy }) => new Path().square(size, cx, cy);\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const Rect = ({ width, height, cx, cy, children, ...rest }) => {\n  const p = new Path();\n  const pathMethod = p.rect.bind(p, width, height, cx, cy);\n  return render(pathMethod, rest, cx, cy, cx, cy, children);\n};\n\nRect.path = ({ width, height, cx, cy }) =>\n  new Path().rect(width, height, cx, cy);\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const Polygon = ({ points, relative, children, ...rest }) => {\n  const p = new Path();\n  const pathMethod = p.polygon.bind(p, points, relative);\n  const [sx, sy] = points[0];\n  const [ex, ey] = points[points.length - 1];\n  return render(pathMethod, rest, sx, sy, ex, ey, children);\n};\n\nPolygon.path = ({ points, relative }) => new Path().polygon(points, relative);\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const Polyline = ({ points, relative, children, ...rest }) => {\n  const p = new Path();\n  const pathMethod = p.polyline.bind(p, points, relative);\n  const [sx, sy] = points[0];\n  const [ex, ey] = points[points.length - 1];\n  return render(pathMethod, rest, sx, sy, ex, ey, children);\n};\n\nPolyline.path = ({ points, relative }) => new Path().polygon(points, relative);\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const RegPolygon = ({ size, sides, cx, cy, children, ...rest }) => {\n  const p = new Path();\n  const pathMethod = p.regPolygon.bind(p, size, sides, cx, cy);\n  return render(pathMethod, rest, cx, cy, cx, cy, children);\n};\n\nRegPolygon.path = ({ size, sides, cx, cy }) =>\n  new Path().regPolygon(size, sides, cx, cy);\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const Sector = ({\n  cx,\n  cy,\n  radius,\n  startAngle,\n  endAngle,\n  children,\n  ...rest\n}) => {\n  const p = new Path();\n  const pathMethod = p.sector.bind(p, cx, cy, radius, startAngle, endAngle);\n  return render(pathMethod, rest, cx, cy, cx, cy, children);\n};\n\nSector.path = ({ cx, cy, radius, startAngle, endAngle, ...rest }) =>\n  new Path().sector(cx, cy, radius, startAngle, endAngle);\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const Segment = ({\n  cx,\n  cy,\n  radius,\n  startAngle,\n  endAngle,\n  children,\n  ...rest\n}) => {\n  const p = new Path();\n  const pathMethod = p.segment.bind(p, cx, cy, radius, startAngle, endAngle);\n  return render(pathMethod, rest, cx, cy, cx, cy, children);\n};\n\nSegment.path = ({ cx, cy, radius, startAngle, endAngle, ...rest }) =>\n  new Path().segment(cx, cy, radius, startAngle, endAngle);\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const Triangle = ({ size, cx, cy, children, ...rest }) => {\n  const p = new Path();\n  const pathMethod = p.triangle.bind(p, size, cx, cy);\n  return render(pathMethod, rest, cx, cy, cx, cy, children);\n};\n\nTriangle.path = ({ size, cx, cy }) => new Path().triangle(size, cx, cy);\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const Line = ({\n  sx,\n  sy,\n  ex,\n  ey,\n  relative = false,\n  children,\n  ...rest\n}) => {\n  const p = new Path().moveTo(sx, sy);\n  const pathMethod = p.lineTo.bind(p, ex, ey, relative);\n  return render(pathMethod, rest, sx, sy, ex, ey, children);\n};\n\nLine.path = ({ sx, sy, ex, ey, relative = false }) =>\n  new Path().moveTo(sx, sy).lineTo(ex, ey, relative);\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const Cubic = ({\n  sx,\n  sy,\n  cx1,\n  cy1,\n  cx2,\n  cy2,\n  ex,\n  ey,\n  S = [],\n  s = [],\n  children,\n  relative = false,\n  ...rest\n}) => {\n  let endX = ex;\n  let endY = ey;\n  const p = new Path().moveTo(sx, sy);\n  const pathMethod = () => {\n    // eslint-disable-next-line no-useless-call\n    const cmd = p.cCurve.call(p, cx1, cy1, cx2, cy2, ex, ey, relative);\n    if (S.length) {\n      S.forEach((scmd) => cmd.S.apply(p, scmd));\n    }\n    if (s.length) {\n      s.forEach((scmd) => cmd.s.apply(p, scmd));\n    }\n    return cmd;\n  };\n  if (S.length) {\n    endX = S[S.length - 1][0];\n    endY = S[S.length - 1][1];\n  }\n  return render(pathMethod, rest, sx, sy, endX, endY, children);\n};\n\nCubic.path = ({\n  sx,\n  sy,\n  cx1,\n  cy1,\n  cx2,\n  cy2,\n  ex,\n  ey,\n  S = [],\n  s = [],\n  relative = false\n}) => {\n  const p = new Path()\n    .moveTo(sx, sy)\n    .sCurve(cx1, cy1, cx2, cy2, ex, ey, relative);\n  if (S.length) {\n    S.forEach((scmd) => p.S(scmd[0], scmd[1]));\n  }\n  if (s.length) {\n    s.forEach((scmd) => p.s(scmd[0], scmd[1]));\n  }\n  return p;\n};\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const Quad = ({\n  sx,\n  sy,\n  cx1,\n  cy1,\n  ex,\n  ey,\n  T = [],\n  t = [],\n  children,\n  relative = false,\n  ...rest\n}) => {\n  let endX = ex;\n  let endY = ey;\n  const p = new Path().moveTo(sx, sy);\n  const pathMethod = () => {\n    // eslint-disable-next-line no-useless-call\n    const cmd = p.qCurve.call(p, cx1, cy1, ex, ey, relative);\n    if (T.length) {\n      T.forEach((tcmd) => cmd.T.call(p, tcmd[0], tcmd[1]));\n    }\n    if (t.length) {\n      t.forEach((tcmd) => cmd.t.call(p, tcmd[0], tcmd[1]));\n    }\n    return cmd;\n  };\n  if (T.length) {\n    endX = T[T.length - 1][0];\n    endY = T[T.length - 1][1];\n  }\n  return render(pathMethod, rest, sx, sy, endX, endY, children);\n};\n\nQuad.path = ({\n  sx,\n  sy,\n  cx1,\n  cy1,\n  ex,\n  ey,\n  T = [],\n  t = [],\n  relative = false\n}) => {\n  const p = new Path()\n    .moveTo(sx, sy)\n    .qCurve(sx, sy, cx1, cy1, ex, ey, relative);\n  if (T.length) {\n    T.forEach((tcmd) => p.T(tcmd[0], tcmd[1]));\n  }\n  if (t.length) {\n    t.forEach((tcmd) => p.t(tcmd[0], tcmd[1]));\n  }\n  return p;\n};\n","import Path from './Path';\nimport render from '../utils/render';\n\nexport const Arc = ({\n  sx,\n  sy,\n  rx,\n  ry,\n  rotation = 0,\n  arc = 0,\n  sweep = 0,\n  ex,\n  ey,\n  children,\n  relative = false,\n  ...rest\n}) => {\n  const p = new Path().moveTo(sx, sy);\n  const pathMethod = p.arc.bind(\n    p,\n    rx,\n    ry,\n    rotation,\n    arc,\n    sweep,\n    ex,\n    ey,\n    relative\n  );\n  return render(pathMethod, rest, sx, sy, ex, ey, children);\n};\n\nArc.path = ({\n  sx,\n  sy,\n  rx,\n  ry,\n  rotation = 0,\n  arc = 0,\n  sweep = 0,\n  ex,\n  ey,\n  relative = false\n}) => {\n  return new Path()\n    .moveTo(sx, sy)\n    .arc(rx, ry, rotation, arc, sweep, ex, ey, relative);\n};\n","import React from 'react';\n\nexport const Text = ({ x, y, sx, sy, children, ...rest }) => {\n  return (\n    <text x={sx || x} y={sy || y} {...rest}>\n      {children}\n    </text>\n  );\n};\n","import React from 'react';\n\nexport const Svg = ({ children, width, height, ...rest }) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox={`0 0 ${width} ${height}`}\n      {...rest}\n    >\n      {children}\n    </svg>\n  );\n};\n","import dagre from 'dagre';\n\nconst setupDag = () => {\n  var g = new dagre.graphlib.Graph();\n  g.setGraph({\n    rankdir: 'BT',\n    marginx: 15,\n    marginy: 50,\n    nodesep: 10,\n    ranksep: 50,\n    edgesep: 5\n  });\n\n  g.setDefaultEdgeLabel(function () {\n    return {};\n  });\n\n  const items = 'abcdefghijklmnopqrstuvwxyz'.split('');\n  items.forEach((item) => g.setNode(item, { width: 25, height: 25 }));\n  items.forEach((item, index, arr) => {\n    if (index === 0) {\n      return;\n    }\n    if (index < 5) {\n      g.setEdge(item, 'a');\n    } else if (index < 9) {\n      g.setEdge(item, 'b');\n    } else if (index < 15) {\n      g.setEdge(item, 'c');\n    } else if (index < 19) {\n      g.setEdge(item, 'd');\n    } else {\n      g.setEdge(item, 'e');\n    }\n  });\n\n  dagre.layout(g);\n\n  return {\n    nodes: g.nodes().map((node) => g.node(node)),\n    edges: g.edges().map((edge) => g.edge(edge)),\n    graph: g.graph()\n  };\n};\n\nexport default setupDag;\n\n","import React from 'react';\nimport Path, { Svg } from 'react-svg-path';\nimport dagSetup from './dagSetup';\n\nconst dag = dagSetup();\n\nconst DagSinglePath = () => {\n  const createPath = () => {\n    const { edges, nodes } = dag;\n    const p = new Path();\n    edges.forEach(({ points, x, y }) => {\n      const m = points.shift();\n      p.M(m.x, m.y);\n      points.forEach((point) => p.L(point.x, point.y));\n    });\n    nodes.forEach(({ width, height, x, y }) => {\n      p.M(x - width / 2, y - height / 2)\n        .right(width)\n        .down(height)\n        .left(width)\n        .up(height);\n    });\n\n    return p.toString();\n  };\n\n  return (\n    <Svg width={dag.graph.width} height={dag.graph.height}>\n      <path stroke='#222' strokeWidth={0.5} d={createPath()} />\n    </Svg>\n  );\n};\n\nexport default DagSinglePath;\n","import React from 'react';\nimport Path, { Svg } from 'react-svg-path';\nimport dagSetup from './dagSetup';\n\nconst dag = dagSetup();\n\nconst DagSinglePath = () => {\n  const createNodes = () => {\n    const { nodes } = dag;\n    const p = new Path();\n    nodes.forEach(({ width, height, x, y }) => {\n      p.M(x - width / 2, y - height / 2)\n        .right(width)\n        .down(height)\n        .left(width)\n        .up(height);\n    });\n\n    return p.toString();\n  };\n\n  const createConnectors = () => {\n    const { edges } = dag;\n    const p = new Path();\n    edges.forEach(({ points, x, y }) => {\n      const m = points.shift();\n      p.M(m.x, m.y);\n      points.forEach((point) => p.L(point.x, point.y));\n    });\n\n    return p.toString();\n  };\n\n  return (\n    <Svg width={dag.graph.width} height={dag.graph.height}>\n      <path stroke='#222' strokeWidth={1} d={createConnectors()} />\n      <path stroke='red' strokeWidth={1} d={createNodes()} />\n    </Svg>\n  );\n};\n\nexport default DagSinglePath;\n","import React from 'react';\nimport Path, { Circle, Square, Svg } from 'react-svg-path';\nimport dagSetup from './dagSetup';\n\nconst dag = dagSetup();\n\nconst DagNodes = () => {\n  const createConnectors = () => {\n    const { edges } = dag;\n    const p = new Path();\n    edges.forEach(({ points, x, y }) => {\n      const m = points.shift();\n      p.M(m.x, m.y);\n      points.forEach((point) => p.L(point.x, point.y));\n    });\n\n    return p.toString();\n  };\n\n  const squareNodes = dag.nodes.slice(0, 5);\n  const circleNodes = dag.nodes.slice(5);\n\n  return (\n    <Svg width={dag.graph.width} height={dag.graph.height}>\n      <path stroke='#222' strokeWidth={1} d={createConnectors()} />\n      {squareNodes.map(({ x, y, width }, index) => {\n        return (\n          <Square\n            key={index}\n            cx={x}\n            cy={y}\n            size={width}\n            style={{ fill: 'rebeccapurple', cursor: 'pointer' }}\n            onClick={() => alert(`clicked node #${index}`)}\n          />\n        );\n      })}\n      {circleNodes.map(({ x, y, width }, index) => {\n        return (\n          <Circle\n            key={index}\n            cx={x}\n            cy={y}\n            size={width}\n            style={{ fill: 'purple', cursor: 'pointer' }}\n            onClick={() => alert(`clicked node #${index + 5}`)}\n          />\n        );\n      })}\n    </Svg>\n  );\n};\n\nexport default DagNodes;\n","import React from 'react';\nimport { Rect, Svg } from 'react-svg-path';\n\nexport const RectDemo = () => (\n  <>\n    <h3>Rect</h3>\n    <code>\n      {`\n        <Rect width={number} height={number} cx={number} cy={number} />\n      `.trim()}\n    </code>\n    <p>\n      Rect is drawn from center point (cx & cy). The cursor is then moved to\n      the center point.\n    </p>\n    <Svg width={140} height={120}>\n      <Rect width={120} height={60} cx={60} cy={60} />\n      <Rect width={10} height={5} cx={60} cy={60} className='filled' />\n    </Svg>\n  </>\n);\n\nRectDemo.displayName = 'Rect'\n","import React from 'react';\nimport { Square, Svg } from 'react-svg-path';\n\nexport const SquareDemo = () => (\n  <>\n    <h3>Square</h3>\n    <code>\n      {`\n        <Square size={number} cx={number} cy={number} />\n      `.trim()}\n    </code>\n    <p>\n      Square is drawn from center point (cx & cy). The cursor is then moved to\n      the center point.\n    </p>\n    <Svg width={140} height={120}>\n      <Square size={100} cx={50} cy={50} />\n      <Square size={10} cx={50} cy={50} className='filled' />\n    </Svg>\n  </>\n);\n\nSquareDemo.displayName = 'Square'\n","import React from 'react';\nimport { Triangle, Svg } from 'react-svg-path';\n\nexport const TriangleDemo = () => (\n  <>\n    <h3>Triangle</h3>\n    <code>\n      {`\n        <Triangle size={number} cx={number} cy={number} />\n      `.trim()}\n    </code>\n    <p>\n      Triangle draws an equilateral triangle from center point (cx & cy). The\n      cursor is then moved to the center point.\n    </p>\n    <Svg width={140} height={120}>\n      <Triangle size={95} cx={50} cy={60} />\n      <Triangle size={10} cx={50} cy={60} className='filled' />\n    </Svg>\n  </>\n);\n\nTriangleDemo.displayName = 'Triangle'\n","import React from 'react';\nimport { Circle, Svg } from 'react-svg-path';\n\nexport const CircleDemo = () => (\n  <>\n    <h3 className='ui-header'>Circle</h3>\n    <code>\n      {`\n        <Circle size={number} cx={number} cy={number} />\n      `.trim()}\n    </code>\n    <p>\n      Circle is drawn from center points (cx & cy). The cursor is then moved to\n      the center points.\n    </p>\n    <Svg width={140} height={120}>\n      <Circle size={95} cx={50} cy={50} />\n      <Circle size={10} cx={50} cy={50} className='filled' />\n    </Svg>\n  </>\n);\n\nCircleDemo.displayName = 'CircleDemo';\n","import React from 'react';\nimport { Ellipse, Svg } from 'react-svg-path';\n\nexport const EllipseDemo = () => (\n  <>\n    <h3>Ellipse</h3>\n    <code>\n      {`\n        <Ellipse width={number} height={number} cx={number} cy={number} />\n      `.trim()}\n    </code>\n    <p>\n      Ellipse is drawn from center point (cx & cy). The cursor is then moved to\n      the center point.\n    </p>\n    <Svg width={155} height={120}>\n      <Ellipse width={150} height={75} cx={80} cy={50} />\n      <Ellipse width={15} height={7.5} cx={80} cy={50} className='filled'\n      />\n    </Svg>\n  </>\n);\n\nEllipseDemo.displayName = 'Ellipse'\n","import React from 'react';\nimport { Segment, Circle, Svg } from 'react-svg-path';\n\nexport const SegmentDemo = () => (\n  <>\n    <h3 className='ui-header'>Segment</h3>\n    <code>\n      {`\n        <Segment cx={number} cy={number} radius={number} startAngle={number} endAngle={number} />\n      `.trim()}\n    </code>\n    <p>\n      Segment is drawn from center point (cx & cy). The cursor is then moved to\n      the center point.\n    </p>\n\n    <Svg width={140} height={120}>\n      <Segment cx={60} cy={60} radius={50} startAngle={0} endAngle={270} />\n      <Circle size={10} cx={60} cy={60} className='filled' />\n    </Svg>\n  </>\n);\n\nSegmentDemo.displayName = 'Segment';\n","import React from 'react';\nimport { Sector, Circle, Svg} from 'react-svg-path';\n\nexport const SectorDemo = () => (\n  <>\n    <h3>Sector</h3>\n    <code>\n      {`\n        <Sector cx={number} cy={number} radius={number} startAngle={number} endAngle={number} />\n      `.trim()}\n    </code>\n    <p>\n      Sector is drawn from center point (cx & cy). The cursor is then moved to\n      the center point.\n    </p>\n    <Svg width={140} height={120}>\n      <Sector cx={60} cy={60} radius={50} startAngle={0} endAngle={270} />\n      <Circle size={10} cx={60} cy={60} className='filled' />\n    </Svg>\n  </>\n);\n\nSectorDemo.displayName = 'Sector'\n\n","import React from 'react';\nimport { Polygon, Svg } from 'react-svg-path';\n\nconst points = [\n  [10, 60],\n  [40, 0],\n  [70, 60],\n  [40, 120]\n];\n\nexport const PolygonDemo = () => (\n  <>\n    <h3>Polygon</h3>\n    <code>\n      {`\nconst points = [\n  [10, 60],\n  [40, 0],\n  [70, 60],\n  [40, 120]\n];\n\n<Polygon points={points} />\n      `.trim()}\n    </code>\n    <p>\n      Polygon accepts an array of [x, y] coordinates and then draws lines\n      connecting those points. The path will start from the first point and end\n      on the first point - closing the shape.\n    </p>\n    <Svg width={140} height={120}>\n      <Polygon points={points} />\n    </Svg>\n  </>\n);\n\nPolygonDemo.displayName = 'Polygon';\n","import React from 'react';\nimport { RegPolygon, Svg } from 'react-svg-path';\n\nexport const RegPolygonDemo = () => (\n  <>\n    <h3>RegPolygon</h3>\n    <code>\n      {`\n        <RegPolygon size={number} sides={number} cx={number} cy={number} />\n      `.trim()}\n    </code>\n    <p>\n      RegPolygon is drawn from center point (cx & cy). The cursor is then moved\n      to the center point.\n    </p>\n    <Svg width={140} height={120}>\n      <RegPolygon size={100} sides={6} cx={50} cy={50} />\n      <RegPolygon size={10} sides={6} cx={50} cy={50} className='filled' />\n    </Svg>\n  </>\n);\n\nRegPolygonDemo.displayName = 'RegPolygon';\n","import React from 'react';\nimport { Polyline, Svg } from 'react-svg-path';\n\nconst pointsAbsolute = [\n  [10, 60],\n  [40, 0],\n  [70, 60],\n  [40, 120]\n];\n\nconst pointsRelative = [\n  [10, 60],\n  [30, -60],\n  [30, 60],\n  [-30, 60]\n];\nexport const PolylineDemo = () => (\n  <>\n    <h3 className='ui-header'>.polyline([points], relative = false)</h3>\n    <p>\n      .polyline accepts an array of [x, y] coordinates and then draws lines\n      connecting those points. The path will start from the first point and end\n      on the last. points can be absolute or relative.\n    </p>\n    <h4 className='ui-header'>absolute</h4>\n    <div style={{ marginBottom: 15 }}>\n      <code>\n        {`\nconst pointsAbsolute = [\n  [10, 60],\n  [40, 0],\n  [70, 60],\n  [40, 120]\n];\n\n<Polyline points={pointsAbsolute} />`.trim()}\n      </code>\n    </div>\n    <Svg width={260} height={160}>\n      <Polyline points={pointsAbsolute} />\n    </Svg>\n    <h4 className='ui-header'>relative</h4>\n    <div style={{ marginBottom: 15 }}>\n      <code>\n        {`\nconst pointsRelative = [\n  [10, 60],\n  [30, -60],\n  [30, 60],\n  [-30, 60]\n];\n\n<Polyline points={pointsRelative} relative />`.trim()}\n      </code>\n    </div>\n    <Svg width={260} height={160}>\n      <Polyline points={pointsRelative} relative />\n    </Svg>\n  </>\n);\n\nPolylineDemo.displayName = 'Polyline';\n","import React from 'react';\nimport { Cubic, Svg } from 'react-svg-path';\n\nexport const CubicDemo = () => (\n  <>\n    <h3>Cubic (cubic curve or c curve.)</h3>\n    <code>\n      {`\n<Cubic\n  sx={number}\n  sy={number}\n  cx1={number}\n  cy1={number}\n  cx2={number}\n  cy2={number}\n  ex={number}\n  ey={number}\n/>\n      `.trim()}\n    </code>\n    <p>Cubic is drawn...</p>\n    <Svg width={200} height={100}>\n      <Cubic\n        sx={10}\n        sy={90}\n        cx1={30}\n        cy1={90}\n        cx2={25}\n        cy2={10}\n        ex={50}\n        ey={10}\n      />\n    </Svg>\n    <p>\n      The `S` or `s` command can be accessed by adding the appropriate `S` or\n      `s` prop to draw a smooth cubic Bézier curve from the current point to the\n      end point specified by x,y.\n    </p>\n    <Svg width={400} height={125}>\n      <Cubic\n        sx={10}\n        sy={90}\n        cx1={30}\n        cy1={90}\n        cx2={25}\n        cy2={10}\n        ex={50}\n        ey={10}\n        S={[[70, 90, 90, 90]]}\n      />\n    </Svg>\n    <code>\n      {`\n<Cubic ... S={[ [ cx, cy, ex, ey ] ]} />\n      `.trim()}\n    </code>\n    <p>\n      Note: if you want to attach a shape at the end of a Cubic you need to use\n      the absolute version of `S`.\n      <br /> <i>... working on it</i>.\n    </p>\n  </>\n);\n\nCubicDemo.displayName = 'Cubic';\n","import React from 'react';\nimport { Quad, Svg } from 'react-svg-path';\n\nexport const QuadDemo = () => (\n  <>\n    <h3>Quad (quadratic curve or q curve.)</h3>\n    <code>\n      {`\n<Quad\n  sx={number}\n  sy={number}\n  cx={number}\n  cy={number}\n  ex={number}\n  ey={number}\n/>\n      `.trim()}\n    </code>\n    <p>Quad is drawn...</p>\n    <Svg width={100} height={100}>\n      <Quad sx={10} sy={50} cx1={25} cy1={25} ex={40} ey={50} />\n    </Svg>\n    <p>\n      The `T` or `t` command can be accessed by adding the appropriate `T` or\n      `t` prop to draw a smooth quadratic Bézier curve from the current point to\n      the end point specified by x,y.\n    </p>\n    <Svg width={400} height={80}>\n      <Quad\n        sx={10}\n        sy={50}\n        cx1={25}\n        cy1={25}\n        ex={40}\n        ey={50}\n        T={[\n          [70, 50],\n          [100, 50],\n          [130, 50],\n          [160, 50],\n          [190, 50],\n          [220, 50]\n        ]}\n      />\n    </Svg>\n    <code>\n      {`\n<Quad ... T={[ [ x, y ], [ x, y ] ]} />\n      `.trim()}\n    </code>\n    <p>\n      Note: if you want to attach a shape at the end of a Quad you need to use\n      the absolute version of `T`.\n      <br /> <i>... working on it</i>.\n    </p>\n  </>\n);\n\nQuadDemo.displayName = 'Quad';\n","import React from 'react';\nimport { Line, Svg } from 'react-svg-path';\n\nexport const LineDemo = () => (\n  <>\n    <h3>Line</h3>\n    <code>\n      {`\n        <Line sx={number} sy={number} ex={number} ey={number} />\n      `.trim()}\n    </code>\n    <p>\n      Line is drawn from starting points (sx & sy) to ending points (ex & ey).\n    </p>\n    <Svg width={80} height={80}>\n      <Line sx={10} sy={10} ex={50} ey={50} />\n    </Svg>\n  </>\n);\n\nLineDemo.displayName = 'Line';\n","import React from 'react';\nimport { Arc, Svg } from 'react-svg-path';\n\nexport const ArcDemo = () => (\n  <>\n    <h3>Arc</h3>\n    <code>\n      {`\n<Arc\n  sx={number}\n  sy={number}\n  rx={number}\n  ry={number}\n  rotation={number}\n  arc={number}\n  sweep={number}\n  ex={number}\n  ey={number}\n/>\n      `.trim()}\n    </code>\n    <p>\n      Arc is drawn...\n    </p>\n    <Svg width={80} height={80}>\n      <Arc sx={10} sy={40} rx={50} ry={85} rotation={0} arc={0} sweep={1} ex={70} ey={40} />\n    </Svg>\n  </>\n);\n\nArcDemo.displayName = 'Arc';\n","import React from 'react';\nimport { Sector } from 'react-svg-path';\n\nconst Pie = ({ size, cx, cy, data }) => {\n  const percentToDegree = (p) => (p / 100) * 360;\n  const sectors = [];\n  let total = 0;\n  data.forEach((d, i) => {\n    const startAngle = percentToDegree(total);\n    const endAngle = percentToDegree(total + d.percent);\n    sectors.push(\n      <Sector\n        endAngle={endAngle}\n        startAngle={startAngle}\n        cx={cx}\n        cy={cy}\n        radius={size/ 2}\n        key={i}\n        fill={d.color} />\n    );\n    total = total + d.percent;\n  });\n\n  return (\n      <g>{sectors}</g>\n  );\n};\n\nexport default Pie;\n","import React from 'react';\nimport { Segment } from 'react-svg-path';\n\nconst Donut = ({ size, width, cx, cy, data, ...rest }) => {\n  const percentToDegree = (p) => (p / 100) * 360;\n  const segments = [];\n  let total = 0;\n  data.forEach((d, i) => {\n    const startAngle = percentToDegree(total);\n    const endAngle = percentToDegree(total + d.percent);\n    segments.push(\n      <Segment\n        cx={cx}\n        cy={cy}\n        radius={(size - width) / 2}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        key={i}\n        strokeWidth={width}\n        stroke={d.color}\n        fill='none'\n       />\n    );\n    total = total + d.percent;\n  });\n\n  return <g>{segments}</g>;\n};\n\nexport default Donut;\n","import React from 'react';\nimport Path, { Svg } from 'react-svg-path';\n\nconst Grid = ({ x, y, width, height, cols, rows, close = true }) => {\n  const lines = new Path().M(x, y);\n  const extra = close ? 1 : 0;\n  const colWidth = width / cols;\n  const rowHeight = height / rows;\n  Array.from({ length: cols + extra }).map((_, index) =>\n    lines.M(x + index * colWidth, y).down(height)\n  );\n  Array.from({ length: rows + extra }).map((_, index) =>\n    lines.M(x, y + index * rowHeight, y).right(width)\n  );\n  return <path d={lines.toString()} stroke='#ddd' />;\n};\n\nconst SparkLine = ({ width, height, data }) => {\n  const sparkline = new Path();\n  const zero = height / 2;\n  const pointDistance = parseInt(width / data.length);\n  const points = data.map((d, index) => {\n    if (index !== 0) {\n      const prev = data[index - 1];\n      return [pointDistance, prev - d];\n    } else {\n      return [pointDistance, d];\n    }\n  });\n  points.unshift([0, zero + data.reduce((a, b) => a + b) / 2 - 10]);\n  sparkline.polyline(points, true);\n\n  return (\n    <Svg width={width + 1} height={height + 1}>\n      <Grid x={0} y={0} width={width} height={height} rows={10} cols={20} />\n      <path d={sparkline.toString()} stroke='red' fill='none' />\n      <path\n        d={new Path().rect(width, height, width / 2, height / 2)}\n        fill='none'\n        stroke='#333'\n      />\n    </Svg>\n  );\n};\n\nexport default SparkLine;\n","import React from 'react';\nimport {\n  Svg,\n  RegPolygon,\n  Circle,\n  Square,\n} from 'react-svg-path';\nimport './NestingDemo1.css';\n\nconst NestingDemo1 = () => (\n  <>\n    <h3>Nesting example #1</h3>\n    <p>\n      Since all of our shape components start and end in the center nesting\n      multiple will result in all of them sharing the same center points.\n    </p>\n    <Svg width={200} height={200} className='nesting-example-1'>\n      <RegPolygon size={120} sides={4} cx={100} cy={100}>\n        <Circle size={55} />\n        <Square size={60} />\n        <Circle size={25} cy={58} />\n      </RegPolygon>\n    </Svg>\n    <div>\n      <code>\n        {`\n<RegPolygon size={120} sides={4} cx={100} cy={100}>\n  <Circle size={55} /> // no need for cx or cy\n  <Square size={60} /> // no need for cx or cy\n  <Circle size={25} cy={58} /> // cx inherited, cy overwritten\n</RegPolygon>\n`.trim()}\n      </code>\n    </div>\n  </>\n);\n\nexport default NestingDemo1;\n","import React from 'react';\nimport {\n  Svg,\n  Line,\n  Circle,\n  Text,\n  Polyline,\n  Square,\n  Arc\n} from 'react-svg-path';\nimport './NestingDemo2.css';\n\nconst genPolylineZag = (centerY) => {\n  const ypoints = Array.from({ length: 10 }).map((p, i) => {\n    return i % 2 === 0 ? centerY - 5 : centerY + 5;\n  });\n  const points = ypoints.map((y, i) => {\n    return [10 * i, y];\n  });\n  points.shift();\n  points.push([100, centerY]);\n  points.push([130, centerY]);\n\n  return points;\n};\n\nconst NestingDemo2 = () => (\n  <>\n    <h3>Nesting example #2</h3>\n    <p>\n      Adding one or more shapes or even &lt;Text> to the end of any other shapes\n      requires very little effort.\n    </p>\n    <Svg width={200} height={200} className='nesting-example-2'>\n      <Line sx={10} sy={25} ex={130} ey={25} stroke='#ccc'>\n        <Circle size={15} fill='#ccc' />\n      </Line>\n      <Line sx={10} sy={50} ex={130} ey={50} stroke='red'>\n        <Square size={20} fill='red' />\n      </Line>\n      <Line sx={10} sy={75} ex={135} ey={75} stroke='green'>\n        <Line ex={125} ey={70} stroke='green' />\n        <Line ex={125} ey={80} stroke='green' />\n      </Line>\n      <Polyline points={genPolylineZag(100)} stroke='red' fill='none'>\n        <Text dx={2} dy={5}>\n          Polyline\n        </Text>\n      </Polyline>\n      <Line sx={10} sy={125} ex={130} ey={125} stroke='red'>\n        <Text dx={2} dy={5}>\n          Line\n        </Text>\n      </Line>\n\n      <Line sx={10} sy={150} ex={100} ey={150} stroke='red'>\n        <Arc rx={10} ry={10} ex={175} ey={150} fill='none' stroke='red'>\n          <Circle size={15} fill='red' />\n        </Arc>\n      </Line>\n    </Svg>\n    <div>\n      <code>\n        {`\n<Line sx={10} sy={25} ex={130} ey={25} stroke='#ccc'>\n  <Circle size={15} fill='#ccc' />\n</Line>\n<Line sx={10} sy={50} ex={130} ey={50} stroke='red'>\n  <Square size={20} fill='red' />\n</Line>\n<Line sx={10} sy={75} ex={135} ey={75} stroke='green'>\n  <Line ex={125} ey={70} stroke='green' />\n  <Line ex={125} ey={80} stroke='green' />\n</Line>\n<Polyline points={genPolylineZag(100)} stroke='red' fill='none'>\n  <Text dx={2} dy={5}>\n    Polyline\n  </Text>\n</Polyline>\n<Line sx={10} sy={125} ex={130} ey={125} stroke='red'>\n  <Text dx={2} dy={5}>\n    Line\n  </Text>\n</Line>\n<Line sx={10} sy={150} ex={100} ey={150} stroke='red'>\n  <Arc rx={10} ry={10} ex={175} ey={150} fill='none' stroke='red'>\n    <Circle size={15} fill='red' />\n  </Arc>\n</Line>`.trim()}\n      </code>\n    </div>\n    <p>\n      This can be reversed to use the parent starting point with the{' '}\n      <em>attach</em> prop. The attach prop is set to `end` by default and can\n      be set to `start`.\n    </p>\n    <Svg width={200} height={45} className='nesting-example-2'>\n      <Line sx={10} sy={25} ex={130} ey={25} stroke='#ccc'>\n        <Circle size={15} fill='#ccc' attach='start' />\n      </Line>\n    </Svg>\n    <div>\n      <code>\n        {`\n<Line sx={10} sy={25} ex={130} ey={25} stroke='#ccc'>\n <Circle size={15} fill='#ccc' attach='start' />\n</Line>`.trim()}\n      </code>\n    </div>\n    <p>And you can mix an match with multiple nested components</p>\n    <Svg width={200} height={45} className='nesting-example-2'>\n      <Polyline points={genPolylineZag(25)} stroke='red' fill='none'>\n        <Text dx={4} dy={5}>\n          Polyline\n        </Text>\n        <Circle size={10} fill='red' attach='start' />\n      </Polyline>\n    </Svg>\n    <div>\n      <code>\n        {`\n<Polyline points={genPolylineZag(25)} stroke='red' fill='none'>\n  <Text dx={4} dy={5}>\n    Polyline\n  </Text>\n  <Circle size={10} fill='red' attach='start' />\n</Polyline>`.trim()}\n      </code>\n    </div>\n  </>\n);\n\nexport default NestingDemo2;\n","import React from 'react';\nimport DagSinglePath from './components/demos/dag/DagSinglePath';\nimport DagTwoPaths from './components/demos/dag/DagTwoPaths';\nimport DagNodes from './components/demos/dag/DagNodes';\n\nimport {\n  RectDemo,\n  SquareDemo,\n  TriangleDemo,\n  RegPolygonDemo,\n  EllipseDemo,\n  CircleDemo,\n  SectorDemo,\n  SegmentDemo,\n  PolylineDemo,\n  PolygonDemo,\n  LineDemo,\n  CubicDemo,\n  QuadDemo,\n  ArcDemo,\n} from './components/demos/basic';\nimport { Svg } from 'react-svg-path';\nimport Pie from './components/demos/complex/Pie';\nimport Donut from './components/demos/complex/Donut';\nimport SparkLine from './components/demos/complex/SparkLine';\nimport NestingDemo1 from './components/demos/nesting/NestingDemo1';\nimport NestingDemo2 from './components/demos/nesting/NestingDemo2';\nimport './App.css';\n\nconst App = () => {\n  const primitives = [\n    CubicDemo,\n    QuadDemo,\n    ArcDemo,\n  ]\n  const basicShapes = [\n    LineDemo,\n    RectDemo,\n    SquareDemo,\n    TriangleDemo,\n    RegPolygonDemo,\n    EllipseDemo,\n    CircleDemo,\n    SectorDemo,\n    SegmentDemo,\n    PolylineDemo,\n    PolygonDemo\n  ];\n\n  const pieData = [\n    {\n      color: '#086972',\n      percent: 20,\n      nested: [\n        { color: 'rgba(0,100,25,0.9)', percent: 10 },\n        { color: 'rgba(0,100,25,0.8)', percent: 10 }\n      ]\n    },\n    {\n      color: '#01a9b4',\n      percent: 30,\n      nested: [\n        { color: 'rgba(0,100,25,0.7)', percent: 10 },\n        { color: 'rgba(0,100,25,0.6)', percent: 10 },\n        { color: 'rgba(0,100,25,0.5)', percent: 10 }\n      ]\n    },\n    {\n      color: '#87dfd6',\n      percent: 50,\n      nested: [\n        { color: 'rgba(0,100,25,0.4)', percent: 25 },\n        { color: 'rgba(0,100,25,0.3)', percent: 25 }\n      ]\n    }\n  ];\n  return (\n    <>\n      <h2>react-svg-path</h2>\n      <hr />\n      <a href='https://github.com/joemaddalone/react-svg-path'>\n        https://github.com/joemaddalone/react-svg-path\n      </a>\n\n      <h3 className='ui-header'>Demos</h3>\n      <p>\n        The svg element below contains only a single path. This may not be\n        ideal, depending on your needs, but it demonstrates the ability to\n        create complex shapes in a single path with react-svg-path\n      </p>\n      <div className='dag'>\n        <div style={{ margin: 20 }}>\n          <DagSinglePath />\n          <a\n            href='https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/dag/DagSinglePath.js'\n            rel='noopener noreferrer'\n            target='_blank'\n          >\n            source\n          </a>\n        </div>\n        <p>\n          We can easily convert this to two paths. One for the nodes and one for\n          the connecting lines.\n        </p>\n        <div style={{ margin: 20 }}>\n          <DagTwoPaths />\n          <a\n            href='https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/dag/DagTwoPaths.js'\n            rel='noopener noreferrer'\n            target='_blank'\n          >\n            source\n          </a>\n        </div>\n        <p>\n          Likewise we can use .toComponent() to create reusable components for\n          each node. Each of these nodes is clickable.\n        </p>\n        <div style={{ margin: 20 }}>\n          <DagNodes />\n          <a\n            href='https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/dag/DagNodes.js'\n            rel='noopener noreferrer'\n            target='_blank'\n          >\n            source\n          </a>\n        </div>\n      </div>\n\n      <p>\n        .toComponent() is a nice way to save a common set of path steps for\n        reuse.\n      </p>\n      <p>We have included a bunch of components for you.</p>\n      <div className='basic-shapes'>\n        <h2 className='ui-header'>Basic Shapes</h2>\n        {basicShapes.map((C, i) => (\n          <span key={i}>\n            <C />\n            <a\n              href={`https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/basic/${C.displayName}.js`}\n              rel='noopener noreferrer'\n              target='_blank'\n            >\n              source\n            </a>\n          </span>\n        ))}\n      </div>\n\n      <h2 className='ui-header'>Combining Shapes</h2>\n      <div className='complex'>\n        <h3 className='ui-header'>multiple Sectors</h3>\n        <Svg width={250} height={160}>\n          <Pie size={150} cx={80} cy={80} data={pieData} />\n        </Svg>\n        <a\n          href={`https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/complex/Pie.js`}\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          source\n        </a>\n        <h3 className='ui-header'>multiple Segments</h3>\n        <Svg width={250} height={160}>\n          <Donut width={25} size={150} cx={80} cy={80} data={pieData} />\n        </Svg>\n        <a\n          href={`https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/complex/Donut.js`}\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          source\n        </a>\n        <h3 className='ui-header'>multiple Sectors + Segments</h3>\n        <Svg width={180} height={180}>\n          <Pie size={130} cx={90} cy={90} data={pieData} />\n          <Donut\n            width={20}\n            size={175}\n            cx={90}\n            cy={90}\n            stroke='#fff'\n            data={pieData.map((pd) => pd.nested).flat()}\n          />\n        </Svg>\n        <h3 className='ui-header'>fitted .polyline</h3>\n        <SparkLine\n          width={300}\n          height={150}\n          data={[-10, -45, 10, 0, 35, 10, -9, 25, 15, 75]}\n        />\n        <a\n          href={`https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/complex/SparkLine.js`}\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          source\n        </a>\n      </div>\n\n      <h2 className='ui-header'>Nesting Components</h2>\n      <div className='complex'>\n        <p>\n          react-svg-path allows you to nest the paths created by components -\n          this is normally not possible in svg. The rendered output will still\n          be separate paths. However when nesting components the child component\n          will inherit a starting point at the parent's ending point. And you\n          can do this endlessly!\n        </p>\n        <NestingDemo1 />\n        <NestingDemo2 />\n      </div>\n\n      <div className='basic-shapes'>\n        <h2 className='ui-header'>Curve Primitives</h2>\n        {primitives.map((C, i) => (\n          <span key={i}>\n            <C />\n            <a\n              href={`https://github.com/joemaddalone/react-svg-path/blob/master/example/src/components/demos/basic/${C.displayName}.js`}\n              rel='noopener noreferrer'\n              target='_blank'\n            >\n              source\n            </a>\n          </span>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
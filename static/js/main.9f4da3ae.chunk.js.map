{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["Path","relative","ex","px","key","Math","d","React","Component","Square","x","y","size","moveTo","lineTo","close","stroke","toElement","Circle","radius","fill","M","m","a","style","SparkLine","width","data","path","strokeWidth","pointDistance","parseInt","length","forEach","val","index","arr","prev","l","Grid","height","cols","rows","lines","extra","colWidth","rowHeight","Array","from","map","_","down","right","toString","App","xmlns","viewBox","transform","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f4da3ae.chunk.js","sourcesContent":["import React from 'react';\n\nclass Path extends React.Component {\n  constructor() {\n    super();\n    this.pathData = [];\n    this.attributes = {};\n\n    return this;\n  }\n\n  attr = (key, val) => {\n    this.attributes[key] = val;\n    return this;\n  };\n\n  fill = (val) => this.attr('fill', val);\n  stroke = (val) => this.attr('stroke', val);\n  strokeWidth = (val) => this.attr('strokeWidth', val);\n  style = (val) => this.attr('style', val);\n  /**\n   * Move svg cursor to x, y.\n   */\n  m = (x, y) => this.moveTo(x, y, true);\n  M = (x, y) => this.moveTo(x, y);\n  moveTo = (x, y, relative = false) => {\n    this.pathData.push(`${relative ? 'm' : 'M'}${x} ${y}`);\n    return this;\n  };\n\n  /**\n   * Draw straight line to x, y.\n   */\n  l = (x, y) => this.lineTo(x, y, true);\n  L = (x, y) => this.lineTo(x, y);\n  lineTo = (x, y, relative = false) => {\n    this.pathData.push(`${relative ? 'l' : 'L'}${x} ${y}`);\n    return this;\n  };\n\n  /**\n   * Draw a horizontal line to x.\n   */\n  H = (x) => this.horizontalTo(x);\n  h = (x) => this.horizontalTo(x, true);\n  horizontalTo = (x, relative = false) => {\n    this.pathData.push(`${relative ? 'h' : 'H'}${x}`);\n    return this;\n  };\n\n  /**\n   * Draw a vertical line to y.\n   */\n  V = (y) => this.verticalTo(y);\n  v = (y) => this.verticalTo(y, true);\n  verticalTo = (x, relative = false) => {\n    this.pathData.push(`${relative ? 'v' : 'V'}${x}`);\n    return this;\n  };\n\n  /**\n   * Draw quadratic curve to ex, ey using cx,cy as the control point.\n   */\n  Q = (cx, cy, ex, ey) => this.qCurveTo(cx, cy, ex, ey);\n  q = (cx, cy, ex, ey) => this.qCurveTo(cx, cy, ex, ey, true);\n  qCurveTo = (cx, cy, ex, ey, relative = false) => {\n    this.pathData.push(`${relative ? 'q' : 'Q'}${cx} ${cy}`);\n    this.pathData.push(`${ex} ${ey}`);\n    return this;\n  };\n\n  T = (ex, ey) => {\n    this.pathData.push(`T ${ex} ${ey}`);\n    return this;\n  };\n\n  t = (ex, ey) => {\n    this.pathData.push(`t ${ex} ${ey}`);\n    return this;\n  };\n\n  S = (cx, cy, ex, ey) => this.sCurveTo(cx, cy, ex, ey);\n  s = (cx, cy, ex, ey) => this.sCurveTo(cx, cy, ex, ey, true);\n  sCurveTo = (cx, cy, ex, ey, relative = false) => {\n    this.pathData.push(`${relative ? 's' : 'S'}${cx} ${cy}`);\n    this.pathData.push(`${ex} ${ey}`);\n    return this;\n  };\n\n  C = (cx1, cy1, cx2, cy2, ex, ey) => this.cCurveTo(cx1, cy1, cx2, cy2, ex, ey);\n  c = (cx1, cy1, cx2, cy2, ex, ey) =>\n    this.cCurveTo(cx1, cy1, cx2, cy2, ex, ey, true);\n\n  cCurveTo = (cx, cy, ex, ey, relative = false) => {\n    this.pathData.push(`${relative ? 's' : 'S'}${cx} ${cy}`);\n    this.pathData.push(`${ex} ${ey}`);\n    return this;\n  };\n\n  A = (rx, ry, rotation, arc, sweep, ex, ey) =>\n    this.arc(rx, ry, rotation, arc, sweep, ex, ey);\n\n  a = (rx, ry, rotation, arc, sweep, ex, ey) =>\n    this.arc(rx, ry, rotation, arc, sweep, ex, ey, true);\n\n  arc = (rx, ry, rotation, arc, sweep, ex, ey, relative = false) => {\n    this.pathData.push(\n      `${\n        relative ? 'a' : 'A'\n      }${rx} ${ry} ${rotation} ${arc} ${sweep} ${ex} ${ey}`\n    );\n    return this;\n  };\n\n  down = (px) => this.v(px);\n  up = (px) => this.v(px * -1);\n  right = (px) => this.h(px);\n  left = (px) => this.h(px * -1);\n\n  Down = (px) => this.V(px);\n  Up = (px) => this.V(px * -1);\n  Right = (px) => this.H(px);\n  Left = (px) => this.H(px * -1);\n\n  /**\n   * Close path.\n   */\n  close = () => {\n    this.pathData.push('z');\n    return this;\n  };\n\n  /**\n   * Return pathData array.\n   */\n  toArray = () => this.pathData;\n\n  /**\n   * Return joined pathData array.\n   */\n  toString = () => this.pathData.join(' ');\n\n  toComponent = (key) => () => this.toElement(key);\n\n  toElement = (key = Math.random()) => (\n    <path key={key} d={this.toString()} {...this.attributes} />\n  );\n}\n\nexport default Path;\n","import React from 'react';\nimport Path from 'react-svg-path';\nimport './App.css';\n\nconst Square = ({ x, y, size }) => {\n  const path = new Path()\n    .moveTo(x, y)\n    .lineTo(x + size, y)\n    .lineTo(x + size, y + size)\n    .lineTo(x, y + size)\n    .close()\n    .stroke('red');\n  return path.toElement();\n};\n\n/**\n *\n * Draws a circle using react-svg-path\n */\nconst Circle = ({ x, y, radius, fill }) => {\n  const path = new Path()\n    .M(x, y)\n    .m(-radius, 0)\n    .a(radius, radius, 0, 1, 0, radius * 2, 0)\n    .a(radius, radius, 0, 1, 0, -(radius * 2), 0)\n    .style({ fill });\n  return path.toElement();\n};\n\n/**\n *\n * Draws a spack line using react-svg-path\n */\nconst SparkLine = ({ x, y, width, data }) => {\n  const path = new Path().moveTo(x, y).stroke('purple').strokeWidth(2);\n  const pointDistance = parseInt(width / data.length);\n  data.forEach((val, index, arr) => {\n    if (index !== 0) {\n      const prev = arr[index - 1];\n      path.l(pointDistance, prev - val);\n    } else {\n      path.l(0, -val);\n    }\n  });\n  return path.toElement();\n};\n\n/**\n *\n * Draws a grid using react-svg-path\n */\nconst Grid = ({ x, y, width, height, cols, rows, close = true }) => {\n  const lines = new Path().M(x, y);\n  const extra = close ? 1 : 0;\n  const colWidth = width / cols;\n  const rowHeight = height / rows;\n  Array.from({ length: cols + extra }).map((_, index) =>\n    lines.M(x + index * colWidth, y).down(height)\n  );\n  Array.from({ length: rows + extra }).map((_, index) =>\n    lines.M(x, y + index * rowHeight, y).right(width)\n  );\n  return <path d={lines.toString()} stroke='#eee' />;\n};\n\nconst App = () => {\n  const width = 500;\n  const height = 500;\n  return (\n    <>\n    <h2>react-svg-path</h2>\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <Grid x={0} y={0} width={width} height={height} cols={25} rows={25} />\n      <g transform='translate(105,125)'>\n        <Square x={50} y={50} size={50} />\n        <Circle x={200} y={75} radius={50} fill='green' />\n        <Circle x={215} y={90} radius={25} fill='white' />\n        <Circle x={220} y={90} radius={15} fill='black' />\n        <Circle x={215} y={80} radius={5} fill='white' />\n        <SparkLine\n          x={25}\n          y={200}\n          width={250}\n          data={[0, 10, 5, 25, 15, 35, 5, 18, 50, 3, 25, 2, 35, 10]}\n        />\n      </g>\n    </svg>\n    </>\n  );\n};\n\nexport default App;\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}